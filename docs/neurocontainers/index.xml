<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NeuroDesk â€“ Neurocontainers</title><link>https://neuro-sevas/neurodesk.github.io/docs/neurocontainers/</link><description>Recent content in Neurocontainers on NeuroDesk</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://neuro-sevas/neurodesk.github.io/docs/neurocontainers/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: CVMFS</title><link>https://neuro-sevas/neurodesk.github.io/docs/neurocontainers/cvmfs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/docs/neurocontainers/cvmfs/</guid><description>
&lt;h1 id="install-cvmfs">Install CVMFS&lt;/h1>
&lt;p>First you need to install CVMFS. Follow the official instructions here: &lt;a href="https://cvmfs.readthedocs.io/en/stable/cpt-quickstart.html#getting-the-software">https://cvmfs.readthedocs.io/en/stable/cpt-quickstart.html#getting-the-software&lt;/a>&lt;/p>
&lt;p>one example for Ubuntu in Windows Subsystem for Linux (WSL) could look like this:&lt;/p>
&lt;pre class="language-batch command-line" data-prompt=">">
&lt;code>sudo apt-get install lsb-release
wget https://ecsft.cern.ch/dist/cvmfs/cvmfs-release/cvmfs-release-latest_all.deb
sudo dpkg -i cvmfs-release-latest_all.deb
rm -f cvmfs-release-latest_all.deb
sudo apt-get update
sudo apt-get build-essential
sudo apt-get install cvmfs&lt;/code>
&lt;/pre>
&lt;h1 id="configure-cvmfs">Configure CVMFS&lt;/h1>
&lt;p>Once installed create the keys and configure the servers used:&lt;/p>
&lt;pre class="language-batch command-line" data-prompt=">">
&lt;code>sudo mkdir -p /etc/cvmfs/keys/ardc.edu.au/
echo "-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwUPEmxDp217SAtZxaBep
Bi2TQcLoh5AJ//HSIz68ypjOGFjwExGlHb95Frhu1SpcH5OASbV+jJ60oEBLi3sD
qA6rGYt9kVi90lWvEjQnhBkPb0uWcp1gNqQAUocybCzHvoiG3fUzAe259CrK09qR
pX8sZhgK3eHlfx4ycyMiIQeg66AHlgVCJ2fKa6fl1vnh6adJEPULmn6vZnevvUke
I6U1VcYTKm5dPMrOlY/fGimKlyWvivzVv1laa5TAR2Dt4CfdQncOz+rkXmWjLjkD
87WMiTgtKybsmMLb2yCGSgLSArlSWhbMA0MaZSzAwE9PJKCCMvTANo5644zc8jBe
NQIDAQAB
-----END PUBLIC KEY-----" | sudo tee /etc/cvmfs/keys/ardc.edu.au/neurodesk.ardc.edu.au.pub
echo "CVMFS_USE_GEOAPI=yes" | sudo tee /etc/cvmfs/config.d/neurodesk.ardc.edu.au.conf
echo 'CVMFS_SERVER_URL="http://cvmfs.neurodesk.org/cvmfs/@fqrn@;http://cvmfs-brisbane.neurodesk.org/cvmfs/@fqrn@;http://cvmfs-sydney.neurodesk.org/cvmfs/@fqrn@;http://cvmfs-frankfurt.neurodesk.org/cvmfs/@fqrn@;http://cvmfs-zurich.neurodesk.org/cvmfs/@fqrn@;http://cvmfs-toronto.neurodesk.org/cvmfs/@fqrn@;http://cvmfs-ashburn.neurodesk.org/cvmfs/@fqrn@;http://cvmfs.neurodesk.org/cvmfs/@fqrn@"' | sudo tee -a /etc/cvmfs/config.d/neurodesk.ardc.edu.au.conf
echo 'CVMFS_KEYS_DIR="/etc/cvmfs/keys/ardc.edu.au/"' | sudo tee -a /etc/cvmfs/config.d/neurodesk.ardc.edu.au.conf
echo "CVMFS_HTTP_PROXY=DIRECT" | sudo tee /etc/cvmfs/default.local
echo "CVMFS_QUOTA_LIMIT=5000" | sudo tee -a /etc/cvmfs/default.local
sudo cvmfs_config setup
# this is only necessary for WSL:
sudo cvmfs_config wsl2_start
sudo cvmfs_config chksetup
ls /cvmfs/neurodesk.ardc.edu.au
sudo cvmfs_talk -i neurodesk.ardc.edu.au host probe
sudo cvmfs_talk -i neurodesk.ardc.edu.au host info
cvmfs_config stat -v neurodesk.ardc.edu.au&lt;/code>
&lt;/pre>
&lt;h1 id="for-ubuntu-2204-users">For Ubuntu 22.04 users&lt;/h1>
&lt;p>If configuring CVMFS returns the following error:&lt;/p>
&lt;pre class="language-batch command-line" data-prompt=">">
&lt;code>Error: failed to load cvmfs library, tried: './libcvmfs_fuse3_stub.so' '/usr/lib/libcvmfs_fuse3_stub.so' '/usr/lib64/libcvmfs_fuse3_stub.so' './libcvmfs_fuse_stub.so' '/usr/lib/libcvmfs_fuse_stub.so' '/usr/lib64/libcvmfs_fuse_stub.so'
./libcvmfs_fuse3_stub.so: cannot open shared object file: No such file or directory
/usr/lib/libcvmfs_fuse3_stub.so: cannot open shared object file: No such file or directory
/usr/lib64/libcvmfs_fuse3_stub.so: cannot open shared object file: No such file or directory
./libcvmfs_fuse_stub.so: cannot open shared object file: No such file or directory
libcrypto.so.1.1: cannot open shared object file: No such file or directory
/usr/lib64/libcvmfs_fuse_stub.so: cannot open shared object file: No such file or directory
Failed to read CernVM-FS configuration&lt;/code>
&lt;/pre>
&lt;p>A temporary workaround is:&lt;/p>
&lt;pre class="language-batch command-line" data-prompt=">">
&lt;code>wget https://mirror.umd.edu/ubuntu/ubuntu/pool/main/o/openssl/libssl1.1_1.1.1f-1ubuntu2.15_amd64.deb
dpkg -i libssl1.1_1.1.1f-1ubuntu2.15_amd64.deb&lt;/code>
&lt;/pre>
&lt;h1 id="install-singularityapptainer">install singularity/apptainer&lt;/h1>
&lt;p>e.g. for Ubuntu/Debian:&lt;/p>
&lt;pre class="language-batch command-line" data-prompt=">">
&lt;code>export VERSION=1.18.3 OS=linux ARCH=amd64 &amp;&amp; \
wget https://dl.google.com/go/go$VERSION.$OS-$ARCH.tar.gz &amp;&amp; \
sudo tar -C /usr/local -xzvf go$VERSION.$OS-$ARCH.tar.gz &amp;&amp; \
rm go$VERSION.$OS-$ARCH.tar.gz
echo 'export GOPATH=${HOME}/go' >> ~/.bashrc &amp;&amp; \
echo 'export PATH=/usr/local/go/bin:${PATH}:${GOPATH}/bin' >> ~/.bashrc &amp;&amp; \
source ~/.bashrc
go get -d github.com/sylabs/singularity
export VERSION=v3.10.0 # or another tag or branch if you like &amp;&amp; \
cd $GOPATH/src/github.com/sylabs/singularity &amp;&amp; \
git fetch &amp;&amp; \
git checkout $VERSION # omit this command to install the latest bleeding edge code from master
export VERSION=3.10.0 &amp;&amp; # adjust this as necessary \
mkdir -p $GOPATH/src/github.com/sylabs &amp;&amp; \
cd $GOPATH/src/github.com/sylabs &amp;&amp; \
wget https://github.com/sylabs/singularity/releases/download/v${VERSION}/singularity-ce-${VERSION}.tar.gz &amp;&amp; \
tar -xzf singularity-ce-${VERSION}.tar.gz &amp;&amp; \789
cd ./singularity-ce-${VERSION} &amp;&amp; \
./mconfig --without-seccomp --without-conmon
./mconfig --without-seccomp --without-conmon &amp;&amp; \
make -C ./builddir &amp;&amp; \
sudo make -C ./builddir install
export PATH="/usr/local/singularity/bin:${PATH}"&lt;/code>
&lt;/pre>
&lt;h1 id="use-of-neurodesk-cvmfs-containers">use of Neurodesk CVMFS containers&lt;/h1>
&lt;p>The containers are now available in /cvmfs/neurodesk.ardc.edu.au/containers/ and can be started with:&lt;/p>
&lt;pre class="language-batch command-line" data-prompt=">">
&lt;code>singularity shell /cvmfs/neurodesk.ardc.edu.au/containers/itksnap_3.8.0_20201208/itksnap_3.8.0_20201208.simg&lt;/code>
&lt;/pre>
&lt;p>make sure that SINGULARITY_BINDPATH include the directories you want to work with:&lt;/p>
&lt;pre class="language-batch command-line" data-prompt=">">
&lt;code>export SINGULARITY_BINDPATH='/cvmfs,/mnt,/home'&lt;/code>
&lt;/pre>
&lt;h1 id="wsl-doesnt-support-homedirectory---so-dont-mount-this">WSL doesn&amp;rsquo;t support homedirectory - so don&amp;rsquo;t mount this&lt;/h1>
&lt;pre class="language-batch command-line" data-prompt=">">
&lt;code>singularity shell --no-home /cvmfs/neurodesk.ardc.edu.au/containers/itksnap_3.8.0_20201208/itksnap_3.8.0_20201208.simg&lt;/code>
&lt;/pre>
&lt;p>or configure permanently:&lt;/p>
&lt;pre class="language-batch command-line" data-prompt=">">
&lt;code>sudo vi /etc/singularity/singularity.conf&lt;/code>
&lt;/pre>
&lt;p>set&lt;/p>
&lt;pre class="language-batch command-line" data-prompt=">">
&lt;code>mount home = no&lt;/code>
&lt;/pre>
&lt;h1 id="install-module-system">install module system:&lt;/h1>
&lt;pre class="language-batch command-line" data-prompt=">">
&lt;code>sudo yum install lmod&lt;/code>
&lt;/pre>
&lt;h1 id="configure-module-system">configure module system:&lt;/h1>
&lt;p>content of /usr/share/module.sh :&lt;/p>
&lt;pre class="language-batch command-line" data-prompt=">">
&lt;code># system-wide profile.modules #
# Initialize modules for all sh-derivative shells #
#----------------------------------------------------------------------#
trap "" 1 2 3
case "$0" in
-bash|bash|*/bash) . /usr/share/lmod/6.6/init/bash ;;
-ksh|ksh|*/ksh) . /usr/share/lmod/6.6/init/ksh ;;
-zsh|zsh|*/zsh) . /usr/share/lmod/6.6/init/zsh ;;
-sh|sh|*/sh) . /usr/share/lmod/6.6/init/sh ;;
*) . /usr/share/lmod/6.6/init/sh ;; # default for scripts
esac
trap - 1 2 3&lt;/code>
&lt;/pre>
&lt;h1 id="use-of-containers-in-the-module-system">use of containers in the module system:&lt;/h1>
&lt;p>add this to .bashrc:&lt;/p>
&lt;pre class="language-batch command-line" data-prompt=">">
&lt;code>if [ -f '/usr/share/module.sh' ]; then source /usr/share/module.sh; fi
if [ -d /cvmfs/neurodesk.ardc.edu.au/neurodesk-modules ]; then
# export MODULEPATH="/cvmfs/neurodesk.ardc.edu.au/neurodesk-modules"
module use /cvmfs/neurodesk.ardc.edu.au/neurodesk-modules/*
else
export MODULEPATH="/neurodesktop-storage/containers/modules"
module use $MODULEPATH
export CVMFS_DISABLE=true
fi
if [ -f '/usr/share/module.sh' ]; then
echo 'Run "ml av" to see which tools are available - use "ml &lt;tool>" to use them in this shell.'
if [ -v "$CVMFS_DISABLE" ]; then
if [ ! -d $MODULEPATH ]; then
echo 'Neurodesk tools not yet downloaded. Choose tools to install from the Application menu.'
fi
fi
fi&lt;/code>
&lt;/pre>
&lt;h1 id="use-of-containers-in-the-module-system-1">use of containers in the module system:&lt;/h1>
&lt;pre class="language-batch command-line" data-prompt=">">
&lt;code>export SINGULARITY_BINDPATH='/cvmfs,/mnt,/home'
module use /cvmfs/neurodesk.ardc.edu.au/neurodesk-modules/*
ml fsl
fslmaths&lt;/code>
&lt;/pre></description></item><item><title>Docs: Datalad</title><link>https://neuro-sevas/neurodesk.github.io/docs/neurocontainers/datalad/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/docs/neurocontainers/datalad/</guid><description>
&lt;p>Once this is completed: &lt;a href="https://github.com/ReproNim/containers/issues/64#issuecomment-999126787">https://github.com/ReproNim/containers/issues/64#issuecomment-999126787&lt;/a>&lt;/p></description></item><item><title>Docs: Docker</title><link>https://neuro-sevas/neurodesk.github.io/docs/neurocontainers/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/docs/neurocontainers/docker/</guid><description>
&lt;p>Our containers are automatically built in &lt;a href="https://github.com/NeuroDesk/neurocontainers/">https://github.com/NeuroDesk/neurocontainers/&lt;/a> and hosted on &lt;a href="https://hub.docker.com/orgs/vnmd/repositories">dockerhub&lt;/a> or on &lt;a href="https://github.com/NeuroDesk/neurocontainers/packages">github&lt;/a>&lt;/p>
&lt;h2 id="pull-docker-containers">Pull Docker containers&lt;/h2>
&lt;p>e.g. for a julia container
docker&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>docker pull vnmd/julia_1.6.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>build singularity image from dockerhub&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>singularity build julia_1.6.1.simg docker://vnmd/julia_1.6.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Replace &lt;code>julia_1.6.1&lt;/code> with your selected application. You can find the available containers here: &lt;a href="https://www.neurodesk.org/applications/">https://www.neurodesk.org/applications/&lt;/a>&lt;/p></description></item><item><title>Docs: Google Colab</title><link>https://neuro-sevas/neurodesk.github.io/docs/neurocontainers/googlecolab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/docs/neurocontainers/googlecolab/</guid><description>
&lt;p>This notebook demonstrates how to use all Neurodesk applications in Google Colab:
&lt;a href="https://colab.research.google.com/drive/1g5cnZxj1llRaHmOs4xSglqsXnFkQYuol?usp=sharing">https://colab.research.google.com/drive/1g5cnZxj1llRaHmOs4xSglqsXnFkQYuol?usp=sharing&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/156729329-883d33a8-f6ae-4d79-ba71-0e1ced172069.png" alt="image">&lt;/p></description></item><item><title>Docs: Singularity</title><link>https://neuro-sevas/neurodesk.github.io/docs/neurocontainers/singularity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/docs/neurocontainers/singularity/</guid><description>
&lt;p>Our docker containers are converted to singularity containers and stored on Object storage.&lt;/p>
&lt;h2 id="download-singularity-containers">Download Singularity Containers&lt;/h2>
&lt;p>First get an overview which containers are available as Singularity containers:
&lt;a href="https://github.com/NeuroDesk/neurodesk/blob/master/cvmfs/log.txt">https://github.com/NeuroDesk/neurodesk/blob/master/cvmfs/log.txt&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -s https://raw.githubusercontent.com/NeuroDesk/neurodesk/master/cvmfs/log.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>assign the container name to a variable:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">container&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>itksnap_3.8.0_20201208
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then download the containers. An easy way is to use CURL (e.g. downloading from the US location):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -X GET https://objectstorage.us-ashburn-1.oraclecloud.com/n/sd63xuke79z3/b/neurodesk/o/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">container&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>.simg -O
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>or from australia&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -X GET https://objectstorage.ap-sydney-1.oraclecloud.com/n/sd63xuke79z3/b/neurodesk/o/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">container&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>.simg -O
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A faster way is pulling from multiple storage locations at once using aria2:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>aria2c https://objectstorage.us-ashburn-1.oraclecloud.com/n/sd63xuke79z3/b/neurodesk/o/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">container&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>.simg https://objectstorage.eu-frankfurt-1.oraclecloud.com/n/sd63xuke79z3/b/neurodesk/o/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">container&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>.simg https://objectstorage.ap-sydney-1.oraclecloud.com/n/sd63xuke79z3/b/neurodesk/o/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">container&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>.simg https://swift.rc.nectar.org.au/v1/AUTH_dead991e1fa847e3afcca2d3a7041f5d/neurodesk/&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">container&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>.simg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="transparent-singularity">Transparent Singularity&lt;/h2>
&lt;p>The singularity containers can be also be used in combination with our &lt;a href="https://neuro-sevas/neurodesk.github.io/developers/transparent_singularity//">Transparent Singularity Tool&lt;/a> tool, that wraps the executables inside a container to make them easily available for pipelines. More information can be found here:&lt;/p>
&lt;p>one example to do this is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -s https://raw.githubusercontent.com/NeuroDesk/neurodesk/master/cvmfs/log.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">container&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>itksnap_3.8.0_20201208
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https://github.com/NeuroDesk/transparent-singularity &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">container&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">cd&lt;/span> &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">container&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./run_transparent_singularity.sh &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">container&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Windows 11 and Windows Subsystem for Linux</title><link>https://neuro-sevas/neurodesk.github.io/docs/neurocontainers/windows11-wsl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/docs/neurocontainers/windows11-wsl/</guid><description>
&lt;h2 id="1-install-wsl">1. Install WSL&lt;/h2>
&lt;p>Follow the instructions to enable Windows Subsystem for Linux 2 in Windows 11: &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install">https://docs.microsoft.com/en-us/windows/wsl/install&lt;/a>&lt;/p>
&lt;h2 id="2-configure-cvfms-singularity-and-lmod-only-needs-to-be-done-once">2. Configure CVFMS, Singularity and LMOD (only needs to be done once)&lt;/h2>
&lt;h3 id="install-build-tools">Install build tools&lt;/h3>
&lt;pre class="language-batch command-line" data-prompt=">">
&lt;code>sudo apt update
sudo apt install make gcc &lt;/code>
&lt;/pre>
&lt;h3 id="install-singularity">Install singularity&lt;/h3>
&lt;pre class="language-batch command-line" data-prompt=">">
&lt;code>export SINGULARITY_VERSION=3.9.3 VERSION=1.17.2 OS=linux ARCH=amd64
wget -q https://dl.google.com/go/go$VERSION.$OS-$ARCH.tar.gz
sudo tar -C /usr/local -xzvf go$VERSION.$OS-$ARCH.tar.gz
rm go$VERSION.$OS-$ARCH.tar.gz
export GOPATH=${HOME}/go
export PATH=/usr/local/go/bin:${PATH}:${GOPATH}/bin
mkdir -p $GOPATH/src/github.com/sylabs
cd $GOPATH/src/github.com/sylabs
wget -q https://github.com/sylabs/singularity/releases/download/v${SINGULARITY_VERSION}/singularity-ce-${SINGULARITY_VERSION}.tar.gz
tar -xzvf singularity-ce-${SINGULARITY_VERSION}.tar.gz
cd singularity-ce-${SINGULARITY_VERSION}
./mconfig --prefix=/usr/local/singularity
make -C builddir
sudo make -C builddir install
cd ..
sudo rm -rf singularity-ce-${SINGULARITY_VERSION}
sudo rm -rf /usr/local/go $GOPATH &lt;/code>
&lt;/pre>
&lt;h3 id="setup-bindpaths-for-singularity-eg-in-bashrc">Setup Bindpaths for Singularity (e.g. in .bashrc)&lt;/h3>
&lt;pre class="language-batch command-line" data-prompt=">">
&lt;code>export PATH="/usr/local/singularity/bin:${PATH}"
export SINGULARITY_BINDPATH='/cvmfs,/mnt,/home'&lt;/code>
&lt;/pre>
&lt;h3 id="cvmfs">CVMFS&lt;/h3>
&lt;p>Follow the instructions here: &lt;a href="https://www.neurodesk.org/docs/neurocontainers/cvmfs/">https://www.neurodesk.org/docs/neurocontainers/cvmfs/&lt;/a>&lt;/p>
&lt;h3 id="lmod">LMOD&lt;/h3>
&lt;pre class="language-batch command-line" data-prompt=">">
&lt;code>apt install lmod&lt;/code>
&lt;/pre>
&lt;h2 id="3-use-neurodesk-containers">3. Use Neurodesk containers&lt;/h2>
&lt;pre class="language-batch command-line" data-prompt=">">
&lt;code>module use /cvmfs/neurodesk.ardc.edu.au/neurodesk-modules/*
ml av
ml fsl
fsleyes&lt;/code>
&lt;/pre></description></item></channel></rss>