<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NeuroDesk – Tutorials</title><link>https://neuro-sevas/neurodesk.github.io/tutorials/</link><description>Recent content in Tutorials on NeuroDesk</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://neuro-sevas/neurodesk.github.io/tutorials/index.xml" rel="self" type="application/rss+xml"/><item><title>Tutorials: Reproducible script execution with DataLad</title><link>https://neuro-sevas/neurodesk.github.io/tutorials/reproducibility/datalad-run/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/tutorials/reproducibility/datalad-run/</guid><description>
&lt;blockquote>
&lt;p>&lt;em>This tutorial was created by Sin Kim.&lt;/em>&lt;/p>
&lt;p>Github: @AKSoo&lt;/p>
&lt;p>Twitter: @SinKim98&lt;/p>
&lt;/blockquote>
&lt;p>In addition to being a convenient method of sharing data, DataLad can also help
you create reproducible analyses by recording how certain result files were
produced (i.e. &lt;em>provenance&lt;/em>). This helps others (and you!) easily keep track of
analyses and rerun them.&lt;/p>
&lt;p>This tutorial will assume you know the basics of navigating the terminal. If
you are not familiar with the terminal at all, check the DataLad Handbook&amp;rsquo;s
&lt;a href="http://handbook.datalad.org/en/latest/intro/howto.html">brief guide&lt;/a>.&lt;/p>
&lt;h2 id="create-a-datalad-project">Create a DataLad project&lt;/h2>
&lt;p>A DataLad &lt;em>dataset&lt;/em> can be any collection of files in folders, so it could be
many things including an analysis project. Let&amp;rsquo;s go to the Neurodesktop storage
and create a dataset for some project. Open a terminal and enter these commands:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>$ cd /storage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ datalad create -c yoda SomeProject
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[INFO ] Creating a new annex repo at /home/user/Desktop/storage/SomeProject
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[INFO ] Running procedure cfg_yoda
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[INFO ] == Command start (output follows) =====
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[INFO ] == Command exit (modification check follows) =====
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>create(ok): /home/user/Desktop/storage/SomeProject (dataset)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">yoda?&lt;/h4>
&lt;code>-c yoda&lt;/code> option configures the dataset according to
the &lt;a href="http://handbook.datalad.org/en/latest/basics/101-127-yoda.html">YODA&lt;/a>, a
set of intuitive organizational principles for data analyses that works
especially well with version control.
&lt;/div>
&lt;p>Go in the dataset and check its contents.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>$ cd SomeProject
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CHANGELOG.md README.md code
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="create-a-script">Create a script&lt;/h2>
&lt;p>One of DataLad&amp;rsquo;s strengths is that it assumes very little about your datasets.
Thus, it can work with any other software on the terminal: Python, R, MATLAB,
AFNI, FSL, FreeSurfer, etc. For this tutorial, we will run the simplest Julia
script.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>$ ml julia
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cat &amp;gt; code/hello.jl &amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>println(&amp;#34;hello neurodesktop&amp;#34;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>EOF
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">EOF?&lt;/h4>
For sake of demonstration, we create the script using
built-in Bash terminal commands only (here document that starts after &lt;code>&amp;lt;&amp;lt; EOF&lt;/code>
and ends when you enter &lt;code>EOF&lt;/code>), but you may use whatever text editor you are
most comfortable with to create the &lt;code>code/hello.jl&lt;/code> file.
&lt;/div>
&lt;p>You may want to test (parts of) your script.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>$ julia code/hello.jl &amp;gt; hello.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cat hello.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hello neurodesktop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="run-and-record">Run and record&lt;/h2>
&lt;p>Before you run your analyses, you should check the dataset for changes and save
or clean them.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>$ datalad status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>untracked: /home/user/Desktop/storage/SomeProject/code/hello.jl (file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>untracked: /home/user/Desktop/storage/SomeProject/hello.txt (file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ datalad save -m &amp;#39;hello script&amp;#39; code/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>add(ok): code/hello.jl (file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>save(ok): . (dataset)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>action summary:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> add (ok: 1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> save (ok: 1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ git clean -i
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Would remove the following item:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hello.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*** Commands ***
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1: clean 2: filter by pattern 3: select by numbers 4: ask each 5: quit 6: help
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>What now&amp;gt; 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Removing hello.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">git&lt;/h4>
&lt;code>git clean&lt;/code> is for removing new, untracked files. For
resetting existing, modified files to the last saved version, you would need
&lt;code>git reset --hard&lt;/code>.
&lt;/div>
&lt;p>When the dataset is clean, we are ready to &lt;code>datalad run&lt;/code>!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>$ mkdir outputs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ datalad run -m &amp;#39;run hello&amp;#39; -o &amp;#39;outputs/hello.txt&amp;#39; &amp;#39;julia code/hello.jl &amp;gt; outputs/hello.txt&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[INFO ] == Command start (output follows) =====
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[INFO ] == Command exit (modification check follows) =====
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>add(ok): outputs/hello.txt (file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>save(ok): . (dataset)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let&amp;rsquo;s go over each of the arguments:&lt;/p>
&lt;ul>
&lt;li>&lt;code>-m 'run hello'&lt;/code>: Human-readable message to record in the dataset log.&lt;/li>
&lt;li>&lt;code>-o 'outputs/hello.txt'&lt;/code>: Expected output of the script. You can specify
multiple &lt;code>-o&lt;/code> arguments and/or use wildcards like &lt;code>'outputs/*'&lt;/code>. This script
has no inputs, but you can similarly specify inputs with &lt;code>-i&lt;/code>.&lt;/li>
&lt;li>&lt;code>'julia ... '&lt;/code>: The final argument is the command that DataLad will run.&lt;/li>
&lt;/ul>
&lt;p>Before getting to the exciting part, let&amp;rsquo;s do a quick sanity check.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>$ cat outputs/hello.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hello neurodesktop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="view-history-and-rerun">View history and rerun&lt;/h2>
&lt;p>So what&amp;rsquo;s so good about the extra hassle of running scripts with &lt;code>datalad run&lt;/code>?
To see that, you will need to pretend you are someone else (or you of future!)
and install the dataset somewhere else. Note that &lt;code>-s&lt;/code> argument is probably a
URL if you were really someone else.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>$ cd ~
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ datalad install -s /neurodesktop-storage/SomeProject
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>install(ok): /home/user/SomeProject (dataset)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cd SomeProject
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Because a DataLad dataset is a Git repository, people who download your dataset
can see exactly how &lt;code>outputs/hello.txt&lt;/code> was created using Git&amp;rsquo;s logs.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>$ git log outputs/hello.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>commit 52cff839596ff6e33aadf925d15ab26a607317de (HEAD -&amp;gt; master, origin/master, origin/HEAD)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Author: Neurodesk User &amp;lt;user@neurodesk.github.io&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Date: Thu Dec 9 08:31:15 2021 +0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [DATALAD RUNCMD] run hello
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> === Do not change lines below ===
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;chain&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cmd&amp;#34;: &amp;#34;julia code/hello.jl &amp;gt; outputs/hello.txt&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;dsid&amp;#34;: &amp;#34;1e82813d-856f-4118-b54d-c3823e025709&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;exit&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;extra_inputs&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;inputs&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;outputs&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;outputs/hello.txt&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;pwd&amp;#34;: &amp;#34;.&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ^^^ Do not change lines above ^^^
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then, using that information, they can re-run the command that created the file
using &lt;code>datalad rerun&lt;/code>!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>$ datalad rerun 52cf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[INFO ] run commit 52cff83; (run hello)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>run.remove(ok): outputs/hello.txt (file) [Removed file]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[INFO ] == Command start (output follows) =====
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[INFO ] == Command exit (modification check follows) =====
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>add(ok): outputs/hello.txt (file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>action summary:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> add (ok: 1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> run.remove (ok: 1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> save (notneeded: 1)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">git&lt;/h4>
In Git, each commit (save state) is assigned a long,
unique machine-generated ID. &lt;code>52cf&lt;/code> refers to the commit with ID that starts
with those characters. Usually 4 is the minimum needed to uniquely identify a
commit. Of course, this ID is probably different for you, so change this
argument to match your commit.
&lt;/div>
&lt;h2 id="see-also">See Also&lt;/h2>
&lt;ul>
&lt;li>To learn more basics and advanced applications of DataLad, check out the
&lt;a href="http://handbook.datalad.org/en/latest/">DataLad Handbook&lt;/a>.&lt;/li>
&lt;li>DataLad is built on top of the popular version control tool &lt;strong>Git&lt;/strong>. There
are many great resources on Git online, like this &lt;a href="https://git-scm.com/book/en/v2">free book&lt;/a>.&lt;/li>
&lt;li>DataLad is only available on the terminal. For a detailed introduction on the
Bash terminal, check the &lt;a href="https://mywiki.wooledge.org/BashGuide">BashGuide&lt;/a>.&lt;/li>
&lt;li>For even more reproducibility, you can include &lt;em>containers&lt;/em> with your dataset
to run analyses in. DataLad has an extension to support script execution in
containers. See &lt;a href="http://handbook.datalad.org/en/latest/basics/101-133-containersrun.html">here&lt;/a>.&lt;/li>
&lt;/ul></description></item><item><title>Tutorials: Analysing M/EEG Data with FieldTrip</title><link>https://neuro-sevas/neurodesk.github.io/tutorials/electrophysiology/fieldtrip/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/tutorials/electrophysiology/fieldtrip/</guid><description>
&lt;blockquote>
&lt;p>&lt;em>This tutorial was created by Judy D Zhu.&lt;/em>&lt;/p>
&lt;p>Email: &lt;a href="mailto:judyzhud@gmail.com">judyzhud@gmail.com&lt;/a>&lt;/p>
&lt;p>Github: @JD-Zhu&lt;/p>
&lt;p>Twitter: @JudyDZhu&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>Please note that this container uses a compiled version of FieldTrip to run scripts (without needing a Matlab license). Code development is not currently supported within the container and needs to be carried out separatedly in Matlab.&lt;br>
&lt;br/>&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;ol>
&lt;li>Navigate to Neurodesk-&amp;gt;Electrophysiology-&amp;gt;fieldtrip-&amp;gt;fieldtrip20211114 in the menu:&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/fieldtrip/1_menu.png" alt="1_menu" title="1_menu">&lt;/p>
&lt;p>Once this window is loaded, you are ready to go:&lt;/p>
&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/fieldtrip/2_container.PNG" alt="2_container" title="2_container">&lt;/p>
&lt;br/>
&lt;ol start="2">
&lt;li>Type the following into the command window (replacing &amp;ldquo;yourscript.m&amp;rdquo; with the name of your custom script - note that you may also need to supply the full path):&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>run_fieldtrip.sh /opt/MCR/v99 yourscript.m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For example, here we ran a script to browse some raw data:&lt;/p>
&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/fieldtrip/3_running.PNG" alt="3_running" title="3_running">&lt;/p>
&lt;p>The fieldtrip GUI is displayed automatically and functions as it normally would when running inside Matlab.&lt;/p>
&lt;p>NOTES:&lt;/p>
&lt;ol>
&lt;li>The script specified in the command line can call other scripts&lt;/li>
&lt;li>The script and the scripts it calls can use all the MATLAB toolboxes included in the compiled version of FieldTrip. If additional MATLAB toolboxes are needed, they need to be put in a filesystem accessible to the FieldTrip container (/neurodesktop-storage, /home/user, etc.), and the path should be added to the MATLAB search path with the addpath function (&lt;a href="https://www.mathworks.com/help/matlab/ref/addpath.html">https://www.mathworks.com/help/matlab/ref/addpath.html&lt;/a>)&lt;/li>
&lt;/ol></description></item><item><title>Tutorials: Using fmriprep with neurodesk on an HPC</title><link>https://neuro-sevas/neurodesk.github.io/tutorials/functional_imaging/fmriprep_cvl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/tutorials/functional_imaging/fmriprep_cvl/</guid><description>
&lt;blockquote>
&lt;p>&lt;em>This tutorial was created by Kelly G. Garner.&lt;/em>&lt;/p>
&lt;p>Github: &lt;a href="https://github.com/kel-github">@kel_github&lt;/a>&lt;/p>
&lt;p>Twitter: &lt;a href="https://twitter.com/garner_theory">@garnertheory&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>This workflow documents how to use fmriprep with neurodesk and provides some details that may help you troubleshoot some common problems I found along the way.&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h1 id="assumptions">Assumptions&lt;/h1>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Your data is already in BIDS format&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> You plan to run fmriprep using Neurodesk&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> You have a local copy of the freesurfer license file (freesurfer.txt)&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="steps">Steps&lt;/h1>
&lt;h2 id="open-fmriprep">Open fmriprep&lt;/h2>
&lt;p>From the applications go Neurodesk -&amp;gt; Functional Imaging -&amp;gt; fmriprep and select the latest version of fmriprep. This should take you to a terminal window with fmriprep loaded.&lt;/p>
&lt;h2 id="setting-up-fmriprep-command">Setting up fmriprep command&lt;/h2>
&lt;p>If you like, you can enter the following fmriprep command straight into the command line in the newly opened terminal. However, as with increasing options and preferences the command can get rather verbose, I instead opted to create an executable bash script that I can run straight from the command line, with minimal editing inbetween runs. If you&amp;rsquo;re not interested in this option you can skip straight to copying/adjusting the code from &lt;code>fmriprep&lt;/code> to &lt;code>-v&lt;/code> below.&lt;/p>
&lt;ul>
&lt;li>open a new file in your editor of choice but really you know it should be Visual Studio Code&lt;/li>
&lt;li>save that file with your chosen name without an extension, e.g. run_fmriprep&lt;/li>
&lt;li>paste in the following and update with your details&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># written by A. Name - the purpose of this code is to run fmriprep with neurodesk&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">6&lt;/span> &lt;span style="color:#8f5902;font-style:italic"># specify the number of threads you want to use&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fmriprep /path/to/your/data &lt;span style="color:#4e9a06">\ &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># this is the top level of your data folder&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /path/to/your/data/derivatives &lt;span style="color:#4e9a06">\ &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># where you want fmriprep output to be saved&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> participant &lt;span style="color:#4e9a06">\ &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># this tells fmriprep to analyse at the participant level&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --fs-license-file /path/to/your/freesurfer.txt &lt;span style="color:#4e9a06">\ &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># where the freesurfer license file is&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --output-spaces T1w MNI152NLin2009cAsym fsaverage fsnative &lt;span style="color:#4e9a06">\ &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --participant-label &lt;span style="color:#0000cf;font-weight:bold">01&lt;/span> &lt;span style="color:#4e9a06">\ &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># put what ever participant labels you want to analyse&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --nprocs &lt;span style="color:#0000cf;font-weight:bold">6&lt;/span> --mem &lt;span style="color:#0000cf;font-weight:bold">10000&lt;/span> &lt;span style="color:#4e9a06">\ &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># fmriprep can be greedy on the hpc, make sure it is not&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --skip_bids_validation &lt;span style="color:#4e9a06">\ &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># its normally fine to skip this but do make sure your data are BIDS enough&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -v &lt;span style="color:#8f5902;font-style:italic"># be verbal fmriprep, tell me what you are doing&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To make the file executable, navigate to this file via the command line in terminal and type&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>chmod u+x run_fmriprep &lt;span style="color:#8f5902;font-style:italic"># this tells the system to make your new file executable&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then to run your new executable, return to your terminal window for fmriprep (that opened when you navigated to fmriprep) and type:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>./run_fmriprep
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>fmriprep should now be merrily working away on your data :)&lt;/p>
&lt;hr>
&lt;h2 id="some-common-pitfalls-i-have-learned-from-my-mistakes-and-sometimes-from-others">Some common pitfalls I have learned from my mistakes (and sometimes from others)&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>If fmriprep hangs it could well be that you are out of disk space. Sometimes this is because fmriprep created a work directory in your home folder which is often limited on the HPC. Make sure fmriprep knows to use a work drectory in your scratch. you can specify this in the fmriprep command by using -w /path/to/the/work/directory/you/made&lt;/p>
&lt;/li>
&lt;li>
&lt;p>I learned this from TomCat (@thomshaw92) - fmriprep can get confused between subjects when run in parallel. Parallelise with caution.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If running on a HPC, make sure to set the processor and memory limits, if not your job will get killed because it hogs all the resources.&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Tutorials: FreeSurfer</title><link>https://neuro-sevas/neurodesk.github.io/tutorials/structural_imaging/freesurfer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/tutorials/structural_imaging/freesurfer/</guid><description>
&lt;blockquote>
&lt;p>&lt;em>This tutorial was created by Steffen Bollmann.&lt;/em>&lt;/p>
&lt;p>Github: &lt;a href="https://github.com/stebo85">@stebo85&lt;/a>
Web: &lt;a href="https://mri.sbollmann.net/">mri.sbollmann.net&lt;/a>
Twitter: &lt;a href="https://twitter.com/sbollmann_MRI">@sbollmann_MRI&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="download-demo-data">Download demo data&lt;/h2>
&lt;p>Open a terminal and run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>pip install osfclient
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>osf -p bt4ez fetch TOMCAT_DIB/sub-01/ses-01_7T/anat/sub-01_ses-01_7T_T1w_defaced.nii.gz /neurodesktop-storage/sub-01_ses-01_7T_T1w_defaced.nii.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="freesurfer-license-file">FreeSurfer License file:&lt;/h2>
&lt;p>Before using Freesurfer you need to request a license here (&lt;a href="https://surfer.nmr.mgh.harvard.edu/registration.html">https://surfer.nmr.mgh.harvard.edu/registration.html&lt;/a>) and store it in your homedirectory as ~/.license&lt;/p>
&lt;h2 id="freesurfer-example">FreeSurfer Example&lt;/h2>
&lt;p>Open FreeSurfer (Neurodesk -&amp;gt; Image Segmentation -&amp;gt; Freesurfer -&amp;gt; Freesurfer 7.1.1)&lt;/p>
&lt;p>Setup FreeSurfer license (for example - replace with your license):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>echo &amp;#34;Steffen.Bollmann@cai.uq.edu.au
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; 21029
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; *Cqyn12sqTCxo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; FSxgcvGkNR59Y&amp;#34; &amp;gt;&amp;gt; ~/.license
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export FS_LICENSE=~/.license
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Setup FreeSurfer:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>mkdir /neurodesktop-storage/freesurfer-output
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>source /opt/freesurfer-7.1.1/SetUpFreeSurfer.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export SUBJECTS_DIR=/neurodesktop-storage/freesurfer-output
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run Recon all pipeline:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>recon-all -subject test-subject -i /neurodesktop-storage/sub-01_ses-01_7T_T1w_defaced.nii.gz -all
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Tutorials: Spectroscopy with lcmodel</title><link>https://neuro-sevas/neurodesk.github.io/tutorials/spectroscopy/lcmodel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/tutorials/spectroscopy/lcmodel/</guid><description>
&lt;blockquote>
&lt;p>&lt;em>This tutorial was created by Steffen Bollmann.&lt;/em>&lt;/p>
&lt;p>Github: &lt;a href="https://github.com/stebo85">@stebo85&lt;/a>
Web: &lt;a href="https://mri.sbollmann.net/">mri.sbollmann.net&lt;/a>
Twitter: &lt;a href="https://twitter.com/sbollmann_MRI">@sbollmann_MRI&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>Open lcmodel from the menu: Applications -&amp;gt; Spectroscopy -&amp;gt; lcmodel -&amp;gt; lcmodel 6.3&lt;/p>
&lt;p>run&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>setup_lcmodel.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>then run&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>lcmgui
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We packed example data into the container (&lt;a href="https://zenodo.org/record/3904443/">https://zenodo.org/record/3904443/&lt;/a>) and we will use this to show a basic analysis.&lt;/p>
&lt;p>The example data comes in the Varian fid format, so click on Varian:&lt;/p>
&lt;img width="522" alt="image" src="https://user-images.githubusercontent.com/4021595/155111509-967055c2-7ee1-4bf5-b645-6a0b1eee3328.png">
&lt;p>and then select the fid data in: /opt/datasets/Spectra_hippocampus(rat)_TE02/s_20131015_03_BDL106_scan0/isise_01.fid&lt;/p>
&lt;img width="751" alt="image" src="https://user-images.githubusercontent.com/4021595/155111715-305678e9-0c60-4154-bdf3-3aa5ccfd7da1.png">
&lt;p>Then Change BASIS and select the appropriate basis set in /opt/datasets/Spectra_hippocampus(rat)_TE02/Control_files_Basis_set&lt;/p>
&lt;img width="753" alt="image" src="https://user-images.githubusercontent.com/4021595/155111920-9df07a57-beb1-4507-ab7e-2c260a52d91d.png">
&lt;p>Then hit Run LCModel:&lt;/p>
&lt;img width="812" alt="image" src="https://user-images.githubusercontent.com/4021595/155112027-11350513-7616-4158-aca7-d5c0b07397d0.png">
&lt;p>and confirm:&lt;/p>
&lt;img width="199" alt="image" src="https://user-images.githubusercontent.com/4021595/155112122-1b93ff25-7469-4997-8aa6-e96a6784defa.png">
&lt;p>then wait a couple of minutes until the analyzed spectra appear - by closing the window you can go through the results:&lt;/p>
&lt;img width="893" alt="image" src="https://user-images.githubusercontent.com/4021595/155112432-c91bbdef-4701-4fee-a37a-b3bf8f847843.png">
&lt;p>the results are also saved in ~/.lcmodel/saved/&lt;/p></description></item><item><title>Tutorials: Analysing EEG Data with MNE</title><link>https://neuro-sevas/neurodesk.github.io/tutorials/electrophysiology/eeg_mne-python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/tutorials/electrophysiology/eeg_mne-python/</guid><description>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>To begin, navigate to Neurodesk-&amp;gt;Electrophysiology-&amp;gt;mne-&amp;gt;vscodeGUI 0.23.4 in the menu. This version of vscode has been installed in a software container together with the a conda environment containing MNE-python. Note that if you open any other version of vscode in Neurodesk, you will not be able to access the MNE conda environment.&lt;/p>
&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/EEG_Tutorial/EEGtut0.png" alt="EEGtut0" title="EEGtut0">&lt;/p>
&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/EEG_Tutorial/EEGtut1.png" alt="EEGtut1" title="EEGtut1">&lt;/p>
&lt;p>Open the folder: “/home/user/Desktop/storage” or a subfolder in which you would like to store this demo. In this folder, create a new file named “EEGDemo.ipynb” or something similar:&lt;/p>
&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/EEG_Tutorial/EEGtut2.png" alt="EEGtut2" title="EEGtut2">&lt;/p>
&lt;p>If this is your first time opening a Jupyter notebook on vscode in neurodesktop, you may see the following popup. If so, click “install” to install the vscode extensions for Jupyter.&lt;/p>
&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/EEG_Tutorial/EEGtut3.png" alt="EEGtut3" title="EEGtut3">&lt;/p>
&lt;h2 id="select-mne-python-kernel">Select MNE python kernel&lt;/h2>
&lt;p>Next, we need to direct vscode to use the python kernel associated with MNE. In the top right corner of your empty jupyter notebook, click “Select Kernel”:&lt;/p>
&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/EEG_Tutorial/EEGtut4.png" alt="EEGtut4" title="EEGtut4">&lt;/p>
&lt;p>Then, select mne-0.23.4 from the dropdown menu, which should look something like this:&lt;/p>
&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/EEG_Tutorial/EEGtut5.png" alt="EEGtut5" title="EEGtut5">&lt;/p>
&lt;h2 id="activate-the-mne-conda-environment-in-the-terminal">Activate the MNE conda environment in the terminal&lt;/h2>
&lt;p>Next, we&amp;rsquo;ll activate the same MNE environment in a terminal. From the top menu in vscode, select Terminal-&amp;gt;New Terminal, or hit [Ctrl]+[Shift]+[`].&lt;/p>
&lt;p>If this is your first time using vscode in this container, you may have to initialise conda by typing &lt;code>conda init bash&lt;/code> in the bash terminal. After initialising bash, you will have to close and then reopen the terminal.&lt;/p>
&lt;p>Once you have initialised conda, you can activate the MNE environment in the terminal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>conda activate mne-0.23.4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should now see &amp;ldquo;(mne-0.23.4)&amp;rdquo; ahead of the current line in the terminal.&lt;/p>
&lt;h2 id="download-sample-data">Download sample data&lt;/h2>
&lt;p>In the terminal (in which you have activated the MNE environment), input the following code to download some BIDS formatted sample EEG data:&lt;/p>
&lt;blockquote>
&lt;p>Remember to update the path to the location you are storing this tutorial!&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>pip install osfclient
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>osf -p C689U fetch Data_sample.zip /neurodesktop-storage/EEGDEMO/Data_sample.zip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>unzip Data_sample.zip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is a small dataset with only 5 EEG channels from a single participant. The participant is viewing a frequency tagged display and is cued to attend to dots tagged at one frequency or another (6 Hz, 7.5 Hz) for long, 15 s trials. To read more about the dataset, click &lt;a href="https://osf.io/c689u/">here&lt;/a>&lt;/p>
&lt;h2 id="plotting-settings">Plotting settings&lt;/h2>
&lt;p>To make sure our plots retain their interactivity, set the following line at the top of your notebook:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>%matplotlib qt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will mean your figures pop out as individual, interactive plots that will allow you to explore the data, rather than as static, inline plots. You can switch “qt” to “inline” to switch back to default, inline plotting.&lt;/p>
&lt;h2 id="loading-and-processing-data">Loading and processing data&lt;/h2>
&lt;blockquote>
&lt;p>NOTE: MNE has many helpful tutorials which delve into data processing and analysis using MNE-python in much further detail. These can be found &lt;a href="https://mne.tools/stable/auto_tutorials/index.html">here&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>Begin by importing the necessary modules and creating a pointer to the data:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span># Interactive plotting
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%matplotlib qt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Import modules
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>import os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>import numpy as np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>import mne
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Load data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sample_data_folder = &amp;#39;/neurodesktop-storage/EEGDemo/Data_sample&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sample_data_raw_file = os.path.join(sample_data_folder, &amp;#39;sub-01&amp;#39;, &amp;#39;eeg&amp;#39;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;sub-01_task-FeatAttnDec_eeg.vhdr&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>raw = mne.io.read_raw_brainvision(sample_data_raw_file , preload=True)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>the raw.info structure contains information about the dataset:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span># Display data info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(raw)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(raw.info)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This data file did not include a montage. Lets create one using standard values for the electrodes we have:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span># Create montage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>montage = {&amp;#39;Iz&amp;#39;: [0, -110, -40],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;Oz&amp;#39;: [0, -105, -15],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;POz&amp;#39;: [0, -100, 15],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;O1&amp;#39;: [-40, -106, -15],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;O2&amp;#39;: [40, -106, -15],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>montageuse = mne.channels.make_dig_montage(ch_pos=montage, lpa=[-82.5, -19.2, -46], nasion=[0, 83.2, -38.3], rpa=[82.2, -19.2, -46]) # based on mne help file on setting 10-20 montage
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next, lets visualise the data.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>raw.plot()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This should open an interactive window in which you can scroll through the data. See the MNE documentation for help on how to customise this plot.&lt;/p>
&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/EEG_Tutorial/EEGtut6.png" alt="EEGtut6" title="EEGtut6">&lt;/p>
&lt;p>If, upon visual inspection, you decide to exclude one of the channels, you can specify this in raw.info[‘bads’] now. For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>raw.info[&amp;#39;bads&amp;#39;] = [&amp;#39;POz&amp;#39;]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next, we’ll extract our events. The trigger channel in this file is incorrectly scaled, so we’ll correct that before we extract our events:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span># Correct trigger scaling
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>trigchan = raw.copy()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>trigchan = trigchan.pick(&amp;#39;TRIG&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>trigchan._data = trigchan._data*1000000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Extract events
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>events = mne.find_events(trigchan, stim_channel=&amp;#39;TRIG&amp;#39;, consecutive=True, initial_event=True, verbose=True)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&amp;#39;Found %s events, first five:&amp;#39; % len(events))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(events[:5])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Plot events
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mne.viz.plot_events(events, raw.info[&amp;#39;sfreq&amp;#39;], raw.first_samp)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/EEG_Tutorial/EEGtut7.png" alt="EEGtut7" title="EEGtut7">&lt;/p>
&lt;p>Now that we’ve extracted our events, we can extract our EEG channels and do some simple pre-processing:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span># select
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>eeg_data = raw.copy().pick_types(eeg=True, exclude=[&amp;#39;TRIG&amp;#39;])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Set montage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>eeg_data.info.set_montage(montageuse)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Interpolate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>eeg_data_interp = eeg_data.copy().interpolate_bads(reset_bads=True)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Filter Data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>eeg_data_interp.filter(l_freq=1, h_freq=45, h_trans_bandwidth=0.1)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let’s visualise our data again now that it’s cleaner:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>#plot results again, this time with some events and scaling.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>eeg_data_interp.plot(events=events, duration=10.0, scalings=dict(eeg=0.00005), color=&amp;#39;k&amp;#39;, event_color=&amp;#39;r&amp;#39;)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/EEG_Tutorial/EEGtut8.png" alt="EEGtut8" title="EEGtut8">&lt;/p>
&lt;p>That’s looking good! We can even see hints of the frequency tagging. It’s about time to epoch our data.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span># Epoch to events of interest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>event_id = {&amp;#39;attend 6Hz K&amp;#39;: 23, &amp;#39;attend 7.5Hz K&amp;#39;: 27}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Extract 15 s epochs relative to events, baseline correct, linear detrend, and reject
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># epochs where eeg amplitude is &amp;gt; 400
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>epochs = mne.Epochs(eeg_data_interp, events, event_id=event_id, tmin=0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmax=15, baseline=(0, 0), reject=dict(eeg=0.000400), detrend=1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Drop bad trials
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>epochs.drop_bad()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can average these epochs to form Event Related Potentials (ERPs):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span># Average erpochs to form ERPs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>attend6 = epochs[&amp;#39;attend 6Hz K&amp;#39;].average()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>attend75 = epochs[&amp;#39;attend 7.5Hz K&amp;#39;].average()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Plot ERPs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>evokeds = dict(attend6=list(epochs[&amp;#39;attend 6Hz K&amp;#39;].iter_evoked()),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> attend75=list(epochs[&amp;#39;attend 7.5Hz K&amp;#39;].iter_evoked()))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mne.viz.plot_compare_evokeds(evokeds, combine=&amp;#39;mean&amp;#39;)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/EEG_Tutorial/EEGtut9.png" alt="EEGtut9" title="EEGtut9">&lt;/p>
&lt;p>In this plot, we can see that the data are frequency tagged. While these data were collected, the participant was performing an attention task in which two visual stimuli were flickering at 6 Hz and 7.5 Hz respectively. On each trial the participant was cued to monitor one of these two stimuli for brief bursts of motion. From previous research, we expect that the steady-state visual evoked potential (SSVEP) should be larger at the attended frequency than the unattended frequency. Lets check if this is true.&lt;/p>
&lt;p>We&amp;rsquo;ll begin by exporting our epoched EEG data to a numpy array&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span># Preallocate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n_samples = attend6.data.shape[1]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sampling_freq = 1200 # sampling frequency
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>epochs_np = np.empty((n_samples, 2) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Get data - averaging across EEG channels
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>epochs_np[:,0] = attend6.data.mean(axis=0)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>epochs_np[:,1] = attend75.data.mean(axis=0)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next, we can use a Fast Fourier Transform (FFT) to transform the data from the time domain to the frequency domain. For this, we&amp;rsquo;ll need to import the FFT packages from scipy:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>from scipy.fft import fft, fftfreq, fftshift
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Get FFT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fftdat = np.abs(fft(epochs_np, axis=0)) / n_samples
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>freq = fftfreq(n_samples, d=1 / sampling_freq) # get frequency bins
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now that we have our frequency transformed data, we can plot our two conditions to assess whether attention altered the SSVEP amplitudes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>import matplotlib.pyplot as plt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fig,ax = plt.subplots(1, 1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ax.plot(freq, fftdat[:,0], &amp;#39;-&amp;#39;, label=&amp;#39;attend 6Hz&amp;#39;, color=[78 / 255, 185 / 255, 159 / 255])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ax.plot(freq, fftdat[:,1], &amp;#39;-&amp;#39;, label=&amp;#39;attend 7.5Hz&amp;#39;, color=[236 / 255, 85 / 255, 58 / 255])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ax.set_xlim(4, 17)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ax.set_ylim(0, 1e-6)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ax.set_title(&amp;#39;Frequency Spectrum&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ax.legend()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/EEG_Tutorial/EEGtut10.PNG" alt="EEGtut10" title="EEGtut10">&lt;/p>
&lt;p>This plot shows that the SSVEPs were indeed modulated by attention in the direction we would expect! Congratulations! You’ve run your first analysis of EEG data in neurodesktop.&lt;/p></description></item><item><title>Tutorials: Using mriqc with neurodesk on HPC</title><link>https://neuro-sevas/neurodesk.github.io/tutorials/functional_imaging/mriqc_cvl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/tutorials/functional_imaging/mriqc_cvl/</guid><description>
&lt;blockquote>
&lt;p>&lt;em>This tutorial was created by Kelly G. Garner.&lt;/em>&lt;/p>
&lt;p>Github: &lt;a href="https://github.com/kel-github">@kel_github&lt;/a>&lt;/p>
&lt;p>Twitter: &lt;a href="https://twitter.com/garner_theory">@garnertheory&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>This workflow documents how to use mriqc with neurodesk and provides some details that may help you troubleshoot some common problems I found along the way.&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h1 id="assumptions">Assumptions&lt;/h1>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Your data is already in BIDS format&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> You plan to run mriqc using Neurodesk&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="steps">Steps&lt;/h1>
&lt;h2 id="open-mriqc">Open mriqc&lt;/h2>
&lt;p>From the applications go Neurodesk -&amp;gt; Functional Imaging -&amp;gt; mriqc and select the latest version of mriqc. This should take you to a terminal window with mriqc loaded. &lt;p>&lt;/p>
&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/mriqc_cvl/mriqc_terminal.png" alt="mriqc_terminal" title="mriqc_terminal"> &amp;lt;!&amp;ndash; &lt;img src="https://neuro-sevas/neurodesk.github.io/subfolder_name/filename.png" alt="filename without extension" title="[filename without extension"> &amp;ndash;&amp;gt;&lt;/p>
&lt;h2 id="setting-up-mriqc-command">Setting up mriqc command&lt;/h2>
&lt;p>If you like, you can enter the following mriqc commands straight into the command line in the newly opened terminal. However, as with increasing options and preferences the command can get rather verbose, so I instead opted to create executable bash scripts that I can run straight from the command line, with minimal editing inbetween runs. I made one for running mriqc at the participant level, and one for running at the group level (for the group report, once all the participants are done). If you&amp;rsquo;re not interested in this option you can skip straight to copying/adjusting the code from &lt;code>mriqc&lt;/code> to &lt;code>-v&lt;/code> below.&lt;/p>
&lt;ul>
&lt;li>open a new file in your editor of choice (e.g. Visual Studio Code)&lt;/li>
&lt;li>save that file with your chosen name without an extension, e.g. run_mriqc_participant or run_mriqc_group&lt;/li>
&lt;li>paste in the following and update with your details&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">#&lt;/span>&lt;span style="color:#000;font-weight:bold">!&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">bin&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">bash&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">#&lt;/span> &lt;span style="color:#000">written&lt;/span> &lt;span style="color:#000">by&lt;/span> &lt;span style="color:#000">A&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span> &lt;span style="color:#000">Name&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span> &lt;span style="color:#000">the&lt;/span> &lt;span style="color:#000">purpose&lt;/span> &lt;span style="color:#000">of&lt;/span> &lt;span style="color:#000">this&lt;/span> &lt;span style="color:#000">code&lt;/span> &lt;span style="color:#000">is&lt;/span> &lt;span style="color:#000">to&lt;/span> &lt;span style="color:#000">run&lt;/span> &lt;span style="color:#000">mriqc&lt;/span> &lt;span style="color:#000">with&lt;/span> &lt;span style="color:#000">neurodesk&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">export&lt;/span> &lt;span style="color:#000">ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">6&lt;/span> &lt;span style="color:#a40000">#&lt;/span> &lt;span style="color:#000">specify&lt;/span> &lt;span style="color:#000">the&lt;/span> &lt;span style="color:#000">number&lt;/span> &lt;span style="color:#000">of&lt;/span> &lt;span style="color:#000">threads&lt;/span> &lt;span style="color:#000">you&lt;/span> &lt;span style="color:#000">want&lt;/span> &lt;span style="color:#000">to&lt;/span> &lt;span style="color:#000">use&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">mriqc&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">path&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">to&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">your&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">data&lt;/span> &lt;span style="color:#a40000">\&lt;/span> &lt;span style="color:#a40000">#&lt;/span> &lt;span style="color:#000">this&lt;/span> &lt;span style="color:#000">is&lt;/span> &lt;span style="color:#000">the&lt;/span> &lt;span style="color:#000">top&lt;/span> &lt;span style="color:#000">level&lt;/span> &lt;span style="color:#000">of&lt;/span> &lt;span style="color:#000">your&lt;/span> &lt;span style="color:#000">data&lt;/span> &lt;span style="color:#000">folder&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">path&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">to&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">your&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">data&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">derivatives&lt;/span> &lt;span style="color:#a40000">\&lt;/span> &lt;span style="color:#a40000">#&lt;/span> &lt;span style="color:#000">where&lt;/span> &lt;span style="color:#000">you&lt;/span> &lt;span style="color:#000">want&lt;/span> &lt;span style="color:#000">mriqc&lt;/span> &lt;span style="color:#000">output&lt;/span> &lt;span style="color:#000">to&lt;/span> &lt;span style="color:#000">be&lt;/span> &lt;span style="color:#000">saved&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">participant&lt;/span> &lt;span style="color:#a40000">\&lt;/span> &lt;span style="color:#a40000">#&lt;/span> &lt;span style="color:#000">this&lt;/span> &lt;span style="color:#000">tells&lt;/span> &lt;span style="color:#000">mriqc&lt;/span> &lt;span style="color:#000">to&lt;/span> &lt;span style="color:#000">analyse&lt;/span> &lt;span style="color:#000">at&lt;/span> &lt;span style="color:#000">the&lt;/span> &lt;span style="color:#000">participant&lt;/span> &lt;span style="color:#000">level&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000">participant&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#000">label&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">01&lt;/span> &lt;span style="color:#a40000">\&lt;/span> &lt;span style="color:#a40000">#&lt;/span> &lt;span style="color:#000">put&lt;/span> &lt;span style="color:#000">what&lt;/span> &lt;span style="color:#000">ever&lt;/span> &lt;span style="color:#000">participant&lt;/span> &lt;span style="color:#000">labels&lt;/span> &lt;span style="color:#000">you&lt;/span> &lt;span style="color:#000">want&lt;/span> &lt;span style="color:#000">to&lt;/span> &lt;span style="color:#000">analyse&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000">work&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#000">dir&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">path&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">to&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">work&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">directory&lt;/span> &lt;span style="color:#a40000">\&lt;/span> &lt;span style="color:#a40000">#&lt;/span>&lt;span style="color:#000">useful&lt;/span> &lt;span style="color:#000">to&lt;/span> &lt;span style="color:#000">specify&lt;/span> &lt;span style="color:#000">so&lt;/span> &lt;span style="color:#000">your&lt;/span> &lt;span style="color:#000">home&lt;/span> &lt;span style="color:#000">directory&lt;/span> &lt;span style="color:#000">definitely&lt;/span> &lt;span style="color:#000">doesnt&lt;/span> &lt;span style="color:#000">get&lt;/span> &lt;span style="color:#000">clogged&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000">nprocs&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">6&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">--&lt;/span>&lt;span style="color:#000">mem_gb&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10000&lt;/span> &lt;span style="color:#a40000">\&lt;/span> &lt;span style="color:#a40000">#&lt;/span> &lt;span style="color:#000">mriqc&lt;/span> &lt;span style="color:#000">can&lt;/span> &lt;span style="color:#000">be&lt;/span> &lt;span style="color:#000">greedy&lt;/span> &lt;span style="color:#000">on&lt;/span> &lt;span style="color:#000">the&lt;/span> &lt;span style="color:#000">hpc&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">make&lt;/span> &lt;span style="color:#000">sure&lt;/span> &lt;span style="color:#000">it&lt;/span> &lt;span style="color:#000">is&lt;/span> &lt;span style="color:#000">not&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#000">v&lt;/span> &lt;span style="color:#a40000">#&lt;/span> &lt;span style="color:#000">be&lt;/span> &lt;span style="color:#000">verbal&lt;/span> &lt;span style="color:#000">mriqc&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">tell&lt;/span> &lt;span style="color:#000">me&lt;/span> &lt;span style="color:#000">what&lt;/span> &lt;span style="color:#000">you&lt;/span> &lt;span style="color:#000">are&lt;/span> &lt;span style="color:#000">doing&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>OR: if you have run all the participants and you just want the group level report, use these mriqc commands instead:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>mriqc /path/to/your/data \ # this is the top level of your data folder
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /path/to/your/data/derivatives \ # where you want mriqc output to be saved. As you are running the group level analysis this folder should be prepopulated with the results of the participant level analysis
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> group \ # this tells mriqc to agive you the group report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -w /path/to/work/directory \ #useful to specify so your home directory definitely doesnt get clogged
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --nprocs 6 --mem_gb 10000 \ # mriqc can be greedy on the hpc, make sure it is not
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -v # be verbal mriqc, tell me what you are doing
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To make either of yours files executable, navigate via the terminal to the same folder in which this file is saved. If you list the files in the folder by using the command &lt;code>ls&lt;/code> you should see your file with the name printed in white.&lt;/p>
&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/mriqc_cvl/pre_exec.png" alt="pre_exec" title="pre_exec"> &amp;lt;!&amp;ndash; &lt;img src="https://neuro-sevas/neurodesk.github.io/subfolder_name/filename.png" alt="filename without extension" title="[filename without extension"> &amp;ndash;&amp;gt;&lt;/p>
&lt;p>Now type the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">chmod&lt;/span> &lt;span style="color:#000">u&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>&lt;span style="color:#000">x&lt;/span> &lt;span style="color:#000">run_mriqc_participant&lt;/span> &lt;span style="color:#a40000">#&lt;/span> &lt;span style="color:#000">this&lt;/span> &lt;span style="color:#000">tells&lt;/span> &lt;span style="color:#000">the&lt;/span> &lt;span style="color:#000">system&lt;/span> &lt;span style="color:#000">to&lt;/span> &lt;span style="color:#000">make&lt;/span> &lt;span style="color:#000">your&lt;/span> &lt;span style="color:#000">new&lt;/span> &lt;span style="color:#000">file&lt;/span> &lt;span style="color:#000">executable&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To know this worked, list the files again. If you have successfully made your file executable then it will be listed in green.&lt;/p>
&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/mriqc_cvl/mriqc_post_exec.png" alt="mriqc_post_exec" title="mriqc_post_exec"> &amp;lt;!&amp;ndash; &lt;img src="https://neuro-sevas/neurodesk.github.io/subfolder_name/filename.png" alt="filename without extension" title="[filename without extension"> &amp;ndash;&amp;gt;&lt;/p>
&lt;p>Then to run your new executable, return to your terminal window for mriqc (that opened when you navigated to mriqc), navigate to the directory where your executable file is stored and type:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">name_of_your_mriqc_file&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>mriqc should now be merrily working away on your data :)&lt;/p>
&lt;hr>
&lt;h2 id="some-common-pitfalls-i-have-learned-from-my-mistakes-and-sometimes-from-others">Some common pitfalls I have learned from my mistakes (and sometimes from others)&lt;/h2>
&lt;ol>
&lt;li>If running on a HPC, make sure to set the processor and memory limits, if not your job will get killed because mriqc hogs all the resources.&lt;/li>
&lt;/ol></description></item><item><title>Tutorials: PhysIO</title><link>https://neuro-sevas/neurodesk.github.io/tutorials/functional_imaging/physio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/tutorials/functional_imaging/physio/</guid><description>
&lt;blockquote>
&lt;p>&lt;em>This tutorial was created by Lars Kasper.&lt;/em>&lt;/p>
&lt;p>Github: @mrikasper&lt;/p>
&lt;p>Twitter: @mrikasper&lt;/p>
&lt;/blockquote>
&lt;h2 id="origin">Origin&lt;/h2>
&lt;p>The PhysIO Toolbox implements ideas for robust physiological noise modeling in fMRI, outlined in this paper:&lt;/p>
&lt;ol>
&lt;li>Kasper, L., Bollmann, S., Diaconescu, A.O., Hutton, C., Heinzle, J., Iglesias,
S., Hauser, T.U., Sebold, M., Manjaly, Z.-M., Pruessmann, K.P., Stephan, K.E., 2017.
&lt;em>The PhysIO Toolbox for Modeling Physiological Noise in fMRI Data&lt;/em>.
Journal of Neuroscience Methods 276, 56-72. &lt;a href="https://doi.org/10.1016/j.jneumeth.2016.10.019">https://doi.org/10.1016/j.jneumeth.2016.10.019&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>PhysIO is part of the open-source &lt;a href="https://translationalneuromodeling.github.io/tapas/">TAPAS Software Package&lt;/a> for Translational Neuromodeling and Computational Psychiatry, introduced in the following paper:&lt;/p>
&lt;ol start="2">
&lt;li>Frässle, S., Aponte, E.A., Bollmann, S., Brodersen, K.H., Do, C.T., Harrison, O.K., Harrison, S.J., Heinzle, J., Iglesias, S., Kasper, L., Lomakina, E.I., Mathys, C., Müller-Schrader, M., Pereira, I., Petzschner, F.H., Raman, S., Schöbi, D., Toussaint, B., Weber, L.A., Yao, Y., Stephan, K.E., 2021. &lt;em>TAPAS: an open-source software package for Translational Neuromodeling and Computational Psychiatry&lt;/em>. Frontiers in Psychiatry 12, 857. &lt;a href="https://doi.org/10.3389/fpsyt.2021.680811">https://doi.org/10.3389/fpsyt.2021.680811&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>Please cite these works if you use PhysIO and see the &lt;a href="https://gitlab.ethz.ch/physio/physio-doc/-/wikis/FAQ#3-how-do-i-cite-physio">FAQ&lt;/a> for details.&lt;/p>
&lt;p>NeuroDesk offers the possibility of running PhysIO without installing Matlab or requiring a Matlab license. The functionality should be equivalent, though debugging and extending the toolbox, as well as unreleased development features, will only be available in the Matlab version of PhysIO, which is exlusively hosted on the &lt;a href="https://github.com/translationalneuromodeling/tapas">TAPAS GitHub&lt;/a>.&lt;/p>
&lt;p>More general info about PhysIO besides NeuroDesk usage is found in the &lt;a href="https://github.com/translationalneuromodeling/tapas/tree/master/PhysIO#readme">README&lt;/a> on GitHub.&lt;/p>
&lt;h2 id="purpose">Purpose&lt;/h2>
&lt;p>The general purpose of the PhysIO toolbox is model-based physiological noise correction of fMRI data using peripheral measures of respiration and cardiac pulsation (respiratory bellows, ECG, pulse oximeter/plethysmograph).&lt;/p>
&lt;p>It incorporates noise models of&lt;/p>
&lt;ul>
&lt;li>cardiac/respiratory phase (RETROICOR, Glover et al. 2000), as well as&lt;/li>
&lt;li>heart rate variability and respiratory volume per time (cardiac response function, Chang et. al, 2009, respiratory response function, Birn et al. 2006),&lt;/li>
&lt;li>and extended motion models (e.g., censoring/scrubbing)&lt;/li>
&lt;/ul>
&lt;p>While the toolbox is particularly well integrated with SPM via the Batch Editor GUI, its output text files can be incorporated into any major neuroimaging analysis package for nuisance regression, e.g., within a GLM.&lt;/p>
&lt;p>Core design goals for the toolbox were: flexibility, robustness, and quality assurance to enable physiological noise correction for large-scale and multi-center studies.&lt;/p>
&lt;p>Some highlights:&lt;/p>
&lt;ul>
&lt;li>Robust automatic preprocessing of peripheral recordings via iterative peak detection, validated in noisy data and patients, and extended processing of respiratory data (Harrison et al., 2021)&lt;/li>
&lt;li>Flexible support of peripheral data formats (BIDS, Siemens, Philips, GE, BioPac, HCP, &amp;hellip;) and noise models (RETROICOR, RVHRCOR).&lt;/li>
&lt;li>Fully automated noise correction and performance assessment for group studies.&lt;/li>
&lt;li>Integration in fMRI pre-processing pipelines as SPM Toolbox (Batch Editor GUI).&lt;/li>
&lt;/ul>
&lt;p>The accompanying technical paper about the toolbox concept and methodology can be found at: &lt;a href="https://doi.org/10.1016/j.jneumeth.2016.10.019">https://doi.org/10.1016/j.jneumeth.2016.10.019&lt;/a>&lt;/p>
&lt;h2 id="download-example-data">Download Example Data&lt;/h2>
&lt;p>The example data should already be present in NeuroDesk in the following folder &lt;code>/opt/spm12&lt;/code>&lt;/p>
&lt;p>If you cannot find the example data there:&lt;/p>
&lt;ol>
&lt;li>Download the latest version from the &lt;a href="https://github.com/translationalneuromodeling/tapas/blob/master/misc/log_tapas.txt">location mentioned in the TAPAS distribution&lt;/a>
&lt;ul>
&lt;li>e.g., &lt;a href="https://www.tapas.tnu-zurich.com/examples_v5.0.0.zip">https://www.tapas.tnu-zurich.com/examples_v5.0.0.zip&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Follow the instructions for copying your own data in the next section&lt;/li>
&lt;/ol>
&lt;h2 id="copy-your-own-data">Copy your own data&lt;/h2>
&lt;ul>
&lt;li>On Windows, the folder &lt;code>C:\neurodesktop-storage&lt;/code> should have been automatically created when starting NeuroDesk&lt;/li>
&lt;li>This is your direct link to the NeuroDesk environment, and anything you put in there should end up within the NeuroDesk desktop in &lt;code>/neurodesktop-storage/&lt;/code> and on your desktop under &lt;code>storage&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="example-running-physio-in-the-gui">Example: Running PhysIO in the GUI&lt;/h2>
&lt;ol>
&lt;li>Open the PhysIO GUI (Neurodesk -&amp;gt; Functional Imaging -&amp;gt; physio -&amp;gt; physioGUI r7771, see screenshot:&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/FunctionalImaging_Tutorial/physio_screenshot1.jpg" alt="PhysIO GUI in NeuroDesk" title="physio_screenshot">&lt;/p>
&lt;ol start="2">
&lt;li>SPM should automatically open up (might take a while). Select &amp;lsquo;fMRI&amp;rsquo; from the modality selection screen.&lt;/li>
&lt;li>Press the &amp;ldquo;Batch Editor&amp;rdquo; button (see screenshot with open Batch Editor, red highlights)&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/FunctionalImaging_Tutorial/physio_screenshot2.jpg" alt="NeuroDesk with SPM Batch Editor PhysIO" title="physio_screenshot2">&lt;/p>
&lt;pre>&lt;code>- NB: If you later want to create a new PhysIO batch with all parameters, from scratch or explore the options, select from the Batch Editor Menu top row, SPM -&amp;gt; Tools -&amp;gt; TAPAS PhysIO Toolbox (see screenshot, read highlights)
&lt;/code>&lt;/pre>
&lt;ol start="4">
&lt;li>For now, load an existing example (or previously created SPM Batch File) as follows: It is most convenient to change the working directory of SPM to the location of the physiological logfiles
&lt;ul>
&lt;li>In the Batch Editor GUI, lowest row, choose &amp;lsquo;CD&amp;rsquo; from the &amp;lsquo;Utils..&amp;rsquo; dropdown menu&lt;/li>
&lt;li>Navigate to any of the example folders, e.g., &lt;code>/opt/spm12/examples/Philips/ECG3T/&lt;/code> and select it&lt;/li>
&lt;li>NB: you can skip this part, if you later manually update all input files in the Batch Editor window (resp/cardiac/scan timing and realignment parameter file further down)&lt;/li>
&lt;li>Any other example should also work the same way, just CD to its folder before the next step&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Select File -&amp;gt; Load Batch from the top row menu of the Batch Editor window
&lt;ul>
&lt;li>make sure you select the matlab batch file &lt;code>*_spm_job.&amp;lt;m|mat&amp;gt;&lt;/code>, (e.g., &lt;code>philips_ecg3t_spm_job.m&lt;/code> and &lt;code>philips_ecg3t_spm_job.mat&lt;/code> are identical, either is fine), but not the script.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Press The green &amp;ldquo;Play&amp;rdquo; button in the top icon menu row of the Batch Editor Window&lt;/li>
&lt;li>Several output figures should appear, with the last being a grayscale plot of the nuisance regressor design matrix&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/FunctionalImaging_Tutorial/physio_screenshot3.jpg" alt="Output Nuisance Regressor Matrix PhysIO" title="physio_screenshot3">&lt;/p>
&lt;ol start="8">
&lt;li>Congratulations, your first successful physiological noise model has been created! If you don&amp;rsquo;t see the mentioned figure, chances are certain input files were not found (e.g., wrong file location specified). You can always check the text output in the &amp;ldquo;bash&amp;rdquo; window associated with the SPM window for any error messages.&lt;/li>
&lt;/ol>
&lt;h2 id="further-info-on-physio">Further Info on PhysIO&lt;/h2>
&lt;p>Please check out the &lt;a href="https://github.com/translationalneuromodeling/tapas/tree/master/PhysIO#readme">README&lt;/a> and &lt;a href="https://gitlab.ethz.ch/physio/physio-doc/-/wikis/FAQ">FAQ&lt;/a>&lt;/p></description></item><item><title>Tutorials: A batch scripting example for PhysIO toolbox</title><link>https://neuro-sevas/neurodesk.github.io/tutorials/functional_imaging/physio_batch_workflow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/tutorials/functional_imaging/physio_batch_workflow/</guid><description>
&lt;blockquote>
&lt;p>&lt;em>This tutorial was created by Kelly G. Garner.&lt;/em>&lt;/p>
&lt;p>Github: @kel-github&lt;/p>
&lt;p>Twitter: @garner_theory&lt;/p>
&lt;/blockquote>
&lt;p>This tutorial walks through 1 way to batch script the use of the PhysIO toolbox with Neurodesk.
The goal is to use the toolbox to generate physiological regressors to use when modelling fMRI data.
The output format of the regressor files are directly compatible for use with SPM, and can be adapted to fit the specifications of other toolboxes. &lt;p>&lt;/p>
&lt;h1 id="getting-started">Getting started&lt;/h1>
&lt;p>This tutorial assumes the following:&lt;/p>
&lt;ol>
&lt;li>Your data are (largely) in BIDs format&lt;/li>
&lt;li>That you have converted your .zip files containing physiological data to .log files. As I was
using a CMRR multi-band sequence, I used &lt;a href="https://github.com/CMRR-C2P/MB/blob/master/extractCMRRPhysio.m">this function&lt;/a>&lt;/li>
&lt;li>That your .log files are in the subject derivatives/&amp;hellip;/sub-&amp;hellip;/ses-&amp;hellip;/&amp;lsquo;func&amp;rsquo; folders of aformentioned BIDs structured data&lt;/li>
&lt;li>That you have a file that contains the motion regressors you plan to use in your GLM. I&amp;rsquo;ll talk below a bit about what I did with the output given by fmriprep (e.g. &amp;hellip;_desc-confounds_timeseries.tsv&amp;rsquo;)&lt;/li>
&lt;li>That you can use SPM12 and the PhysIO GUI to initialise your batch code&lt;/li>
&lt;/ol>
&lt;p>NB. You can see the code generated from this tutorial &lt;a href="https://github.com/kel-github/imaging_cert_value_7T_pipeline/tree/master/physiol_regress">here&lt;/a> (Coming soon!) &lt;p>&lt;/p>
&lt;h1 id="1-generate-an-example-script-for-batching">1. Generate an example script for batching&lt;/h1>
&lt;p>First you will create an example batch script that is specific to one of your participants. To achieve this I downloaded locally the relevant &amp;lsquo;.log&amp;rsquo; files for one participant, as well as the &amp;lsquo;&amp;hellip;desc-confounds_timeseries.tsv&amp;rsquo; output for fmriprep for each run. PhysIO is nice in that it will append the regressors from your physiological data to your movement parameters, so that you have a single file of regressors to add to your design matrix in SPM etc (other toolboxes are available). &lt;p>&lt;/p>
&lt;p>To work with PhysIO toolbox, your motion parameters need to be in the .txt format as required by SPM.&lt;/p>
&lt;p>I made some simple functions in python that would extract my desired movement regressors and save them to the space separated .txt file as is required by SPM. They can be found &lt;a href="https://github.com/kel-github/imaging_cert_value_7T_pipeline/tree/master/physiol_regress/get_movement_regressors">here&lt;/a>. (Coming soon!)&lt;/p>
&lt;p>Once I had my .log files and .txt motion regressors file, I followed the instructions &lt;a href="https://gitlab.ethz.ch/physio/physio-doc/-/wikis/QUICKSTART">here&lt;/a> to get going with the Batch editor, and used &lt;a href="https://www.sciencedirect.com/science/article/pii/S016502701630259X">this paper&lt;/a> to aid my understanding of how to complete the fields requested by the Batch editor.&lt;/p>
&lt;p>I wound up with a Batch script for the PhysIO toolbox that looked a little bit like this:&lt;/p>
&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/PhysIO_Batch/PhysIOBatch1.png" alt="PhysIOBatch1" title="PhysIOBatch1"> &amp;lt;!&amp;ndash; &lt;img src="https://neuro-sevas/neurodesk.github.io/subfolder_name/filename.png" alt="filename without extension" title="[filename without extension"> &amp;ndash;&amp;gt;&lt;/p>
&lt;h1 id="2-generalise-the-script-for-use-with-any-participant">2. Generalise the script for use with any participant&lt;/h1>
&lt;p>Now that you have an example script that contains the specific details for a single participant, you are ready to generalise this code so that you can run it for any participant you choose. I decided to do this by doing the following:&lt;/p>
&lt;ul>
&lt;li>First I generate an &amp;lsquo;info&amp;rsquo; structure for each participant. This is a structure saved as a matfile for each participant under &amp;lsquo;derivatives&amp;rsquo;, in the relevant sub-z/ses-y/func/ folder. This structure contains the subject specific details that PhysIO needs to know to run. Thus I wrote a matlab function that saves a structure called info with the following fields:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Matlab" data-lang="Matlab">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% -- outputs: a matfile containing a structure called info with the&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% following fields:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% -- sub_num = subject number: [string] of form &amp;#39;01&amp;#39; &amp;#39;11&amp;#39; or &amp;#39;111&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% -- sess = session number: [integer] e.g. 2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% -- nrun = [integer] number of runs for that participant&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% -- nscans = number of scans (volumes) in the design matrix for each&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% run [1, nrun]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% -- cardiac_files = a cell of the cardiac files for that participant&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% (1,n = nrun) - attained by using extractCMRRPhysio()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% -- respiration_files = same as above but for the resp files - attained by using extractCMRRPhysio()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% -- scan_timing = info file from Siemens - attained by using extractCMRRPhysio()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% -- movement = a cell of the movement regressor files for that&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% participant (.txt, formatted for SPM)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To directly see the functions that produce this information, you can go to this &lt;a href="https://github.com/kel-github/imaging_cert_value_7T_pipeline/tree/master/physiol_regress">repo here&lt;/a> &lt;strong>coming soon!&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Next I amended the batch script to load a given participant&amp;rsquo;s info file and to retrieve this information for the required fields in the batch. The batch script winds up looking like this:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Matlab" data-lang="Matlab">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">%% written by K. Garner, 2022&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% uses batch info:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">%-----------------------------------------------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% Job saved on 17-Aug-2021 10:35:05 by cfg_util (rev $Rev: 7345 $)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% spm SPM - SPM12 (7771)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% cfg_basicio BasicIO - Unknown&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">%-----------------------------------------------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% load participant info, and print into the appropriate batch fields below&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% before running spm jobman&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% assumes data is in BIDS format&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">%% load participant info&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">sub&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;01&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">dat_path&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;/file/path/to/top-level/of-your-derivatives-fmriprep/folder&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">task&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;attlearn&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">load&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">fullfile&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dat_path&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sprintf&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;sub-%s&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sub&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;ses-02&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;func&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#8f5902;font-style:italic">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">sprintf&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;sub-%s_ses-02_task-%s_desc-physioinfo&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sub&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">task&lt;/span>&lt;span style="color:#000;font-weight:bold">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">% set variables&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">nrun&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">info&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">nrun&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">nscans&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">info&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">nscans&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">cardiac_files&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">info&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">cardiac_files&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">respiration_files&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">info&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">respiration_files&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">scan_timing&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">info&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">scan_timing&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">movement&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">info&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">movement&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">%% initialise spm&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">spm_jobman&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;initcfg&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span> &lt;span style="color:#8f5902;font-style:italic">% check this for later&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;defaults&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;FMRI&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">%% run through runs, print info and run &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#000">irun&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#000">nrun&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">clear&lt;/span> &lt;span style="color:#000">matlabbatch&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">save_dir&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">cellstr&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">fullfile&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dat_path&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sprintf&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;sub-%s&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sub&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;ses-02&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;func&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">));&lt;/span> &lt;span style="color:#8f5902;font-style:italic">% 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">log_files&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">vendor&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;Siemens_Tics&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">log_files&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">cardiac&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">cardiac_files&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">irun&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span> &lt;span style="color:#8f5902;font-style:italic">% 2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">log_files&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">respiration&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">respiration_files&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">irun&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span> &lt;span style="color:#8f5902;font-style:italic">% 3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">log_files&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">scan_timing&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">scan_timing&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">irun&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span> &lt;span style="color:#8f5902;font-style:italic">% 4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">log_files&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sampling_interval&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">log_files&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">relative_start_acquisition&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">log_files&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">align_scan&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;last&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">scan_timing&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sqpar&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Nslices&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">81&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">scan_timing&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sqpar&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">NslicesPerBeat&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">scan_timing&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sqpar&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">TR&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1.51&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">scan_timing&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sqpar&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Ndummies&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">scan_timing&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sqpar&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Nscans&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">nscans&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">irun&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span> &lt;span style="color:#8f5902;font-style:italic">% 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">scan_timing&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sqpar&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">onset_slice&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">scan_timing&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sqpar&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">time_slice_to_slice&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">scan_timing&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sqpar&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Nprep&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">scan_timing&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sync&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">nominal&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">struct&lt;/span>&lt;span style="color:#000;font-weight:bold">([]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">preproc&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">cardiac&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">modality&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;PPU&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">preproc&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">cardiac&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">filter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">no&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">struct&lt;/span>&lt;span style="color:#000;font-weight:bold">([]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">preproc&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">cardiac&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">initial_cpulse_select&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">auto_template&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">min&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0.4&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">preproc&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">cardiac&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">initial_cpulse_select&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">auto_template&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">file&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;initial_cpulse_kRpeakfile.mat&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">preproc&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">cardiac&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">initial_cpulse_select&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">auto_template&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">max_heart_rate_bpm&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">90&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">preproc&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">cardiac&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">posthoc_cpulse_select&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">off&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">struct&lt;/span>&lt;span style="color:#000;font-weight:bold">([]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">preproc&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">respiratory&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">filter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">passband&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0.01&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">preproc&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">respiratory&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">despike&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">true&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">output_multiple_regressors&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;mregress.txt&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">output_physio&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;physio&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">orthogonalise&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;none&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">censor_unreliable_recording_intervals&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">true&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#8f5902;font-style:italic">%false; &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">retroicor&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">yes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">order&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">c&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">retroicor&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">yes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">order&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">r&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">retroicor&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">yes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">order&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">cr&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">rvt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">no&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">struct&lt;/span>&lt;span style="color:#000;font-weight:bold">([]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">hrv&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">no&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">struct&lt;/span>&lt;span style="color:#000;font-weight:bold">([]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">noise_rois&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">no&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">struct&lt;/span>&lt;span style="color:#000;font-weight:bold">([]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">movement&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">yes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">file_realignment_parameters&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#000">fullfile&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dat_path&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sprintf&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;sub-%s&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sub&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;ses-02&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;func&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sprintf&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;sub-%s_ses-02_task-%s_run-%d_desc-motion_timeseries.txt&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">sub&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">task&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">irun&lt;/span>&lt;span style="color:#000;font-weight:bold">))};&lt;/span> &lt;span style="color:#8f5902;font-style:italic">%8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">movement&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">yes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">order&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">6&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">movement&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">yes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">censoring_method&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;FD&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">movement&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">yes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">censoring_threshold&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0.5&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">model&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">other&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">no&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">struct&lt;/span>&lt;span style="color:#000;font-weight:bold">([]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">verbose&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">level&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">verbose&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">fig_output_file&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">}.&lt;/span>&lt;span style="color:#000">spm&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tools&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">physio&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">verbose&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">use_tabs&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">false&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">spm_jobman&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;run&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">matlabbatch&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="3-ready-to-run-on-neurodesk">3. Ready to run on Neurodesk!&lt;/h1>
&lt;p>Now we have a batch script, we&amp;rsquo;re ready to run this on Neurodesk - yay! &lt;p>&lt;/p>
&lt;p>First make sure the details at the top of the script are correct. You can see that this script could easily be amended to run multiple subjects.&lt;/p>
&lt;p>On Neurodesk, go to the PhysIO toolbox, but select the command line tool rather than the GUI interface (&amp;lsquo;physio r7771 instead of physioGUI r7771). This will take you to the container for the PhysIO toolbox &lt;p>&lt;/p>
&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/PhysIO_Batch/PhysIOBatch2.png" alt="PhysIOBatch2" title="PhysIOBatch2"> &amp;lt;!&amp;ndash; &lt;img src="https://neuro-sevas/neurodesk.github.io/subfolder_name/filename.png" alt="filename without extension" title="[filename without extension"> &amp;ndash;&amp;gt;&lt;/p>
&lt;p>Now to run your PhysIO batch script, type the command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>run_spm12.sh /opt/mcr/v99/ batch /your/batch/scipt/named_something.m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Et Voila! Physiological regressors are now yours - mua ha ha!&lt;/p></description></item><item><title>Tutorials: Quantitative Susceptibility Mapping</title><link>https://neuro-sevas/neurodesk.github.io/tutorials/phase_processing/qsm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/tutorials/phase_processing/qsm/</guid><description>
&lt;blockquote>
&lt;p>&lt;em>This tutorial was created by Steffen Bollmann.&lt;/em>&lt;/p>
&lt;p>Github: &lt;a href="https://github.com/stebo85">@stebo85&lt;/a>
Web: &lt;a href="https://mri.sbollmann.net/">mri.sbollmann.net&lt;/a>
Twitter: &lt;a href="https://twitter.com/sbollmann_MRI">@sbollmann_MRI&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="quantitative-susceptibility-mapping-in-qsmxt">Quantitative Susceptibility Mapping in QSMxT&lt;/h2>
&lt;p>Neurodesk includes QSMxT, a complete and end-to-end QSM processing and analysis framework that excels at automatically reconstructing and processing QSM for large groups of participants.&lt;/p>
&lt;p>QSMxT provides pipelines implemented in Python that:&lt;/p>
&lt;ol>
&lt;li>Automatically convert DICOM data to the Brain Imaging Data Structure (BIDS)&lt;/li>
&lt;li>Automatically reconstruct QSM, including steps for:
&lt;ol>
&lt;li>Robust masking without anatomical priors&lt;/li>
&lt;li>Phase unwrapping (Laplacian based)&lt;/li>
&lt;li>Background field removal + dipole inversion (&lt;code>tgv_qsm&lt;/code>)&lt;/li>
&lt;li>Multi-echo combination&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Automatically generate a common group space for the whole study, as well as average magnitude and QSM images that facilitate group-level analyses.&lt;/li>
&lt;li>Automatically segment T1w data and register them to the QSM space to extract quantitative values in anatomical regions of interest.&lt;/li>
&lt;li>Export quantitative data to CSV for all subjects using the automated segmentations, or a custom segmentation in the group space (we recommend ITK snap).&lt;/li>
&lt;/ol>
&lt;p>If you use QSMxT for a study, please cite &lt;a href="https://doi.org/10.1101/2021.05.05.442850">https://doi.org/10.1101/2021.05.05.442850&lt;/a> (for QSMxT) and &lt;a href="http://www.ncbi.nlm.nih.gov/pubmed/25731991">http://www.ncbi.nlm.nih.gov/pubmed/25731991&lt;/a> (for TGVQSM)&lt;/p>
&lt;h2 id="download-demo-data">Download demo data&lt;/h2>
&lt;p>Open a terminal and run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>pip install osfclient
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export PATH=$PATH:~/.local/bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd /neurodesktop-storage/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>osf -p ru43c clone /neurodesktop-storage/qsmxt-demo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>unzip /neurodesktop-storage/qsmxt-demo/osfstorage/GRE_2subj_1mm_TE20ms/sub1/GR_M_5_QSM_p2_1mmIso_TE20.zip -d /neurodesktop-storage/qsmxt-demo/dicoms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>unzip /neurodesktop-storage/qsmxt-demo/osfstorage/GRE_2subj_1mm_TE20ms/sub1/GR_P_6_QSM_p2_1mmIso_TE20.zip -d /neurodesktop-storage/qsmxt-demo/dicoms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>unzip /neurodesktop-storage/qsmxt-demo/osfstorage/GRE_2subj_1mm_TE20ms/sub2/GR_M_5_QSM_p2_1mmIso_TE20.zip -d /neurodesktop-storage/qsmxt-demo/dicoms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>unzip /neurodesktop-storage/qsmxt-demo/osfstorage/GRE_2subj_1mm_TE20ms/sub2/GR_P_6_QSM_p2_1mmIso_TE20.zip -d /neurodesktop-storage/qsmxt-demo/dicoms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="qsmxt-usage">QSMxT Usage&lt;/h2>
&lt;p>Start QSMxT (in this demo we used 1.1.9) from the applications menu in the desktop (&lt;em>Neurodesk&lt;/em> &amp;gt; &lt;em>Quantitative Imaging&lt;/em> &amp;gt; &lt;em>qsmxt&lt;/em>)&lt;/p>
&lt;ol>
&lt;li>Convert DICOM data to BIDS:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">cd&lt;/span> /neurodesktop-storage/qsmxt-demo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python3 /opt/QSMxT/run_0_dicomSort.py /neurodesktop-storage/qsmxt-demo/dicoms 00_dicom
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python3 /opt/QSMxT/run_1_dicomConvert.py 00_dicom 01_bids
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>This will bring up an interactive question to ask you which sequence your QSM data are. It will automatically detect the QSM sequence if it has qsm or t2star in the protocol name or you can use the command line argument &lt;code>--t2starw_series_patterns&lt;/code> to specify. This demo data comes without a structural scan (automatically recognized with t1w in the name, or specified with &lt;code>--t1w_series_patterns&lt;/code>, so hit Enter to continue when it asks you to identify which scan the T1w scan is:&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/155911430-d2b7e904-6a8a-426c-bc27-e2167dd03a4d.png" alt="{DE1B0DF7-49B8-47F8-ACFF-B205F70BE58B}">&lt;/p>
&lt;ol start="2">
&lt;li>Run QSM pipeline:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>python3 /opt/QSMxT/run_2_qsm.py 01_bids 02_qsm_output
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>Then you can open a viewer (Visualization -&amp;gt; mricrogl -&amp;gt; mricroglGUI) and you can find the QSM outputs in /neurodesktop-storage/qsmxt-demo/02_qsm_output/qsm_final/_run_run-1/&lt;/p>
&lt;p>for example: sub-170705-134431-std-1312211075243167001_ses-1_run-1_part-phase_T2starw_scaled_qsm_000_composite_average.nii&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/4021595/155106388-72a691a4-c0a4-4cc6-a2ac-c9271888b82d.png" alt="image">&lt;/p>
&lt;blockquote>
&lt;p>Please note that the demo dataset does not have a T1w scan for anatomical segmentation and therefore the subsequent steps in QSMxT (e.g. &lt;code>python3 /opt/QSMxT/run_3_segment.py 01_bids 03_segmentation&lt;/code>) will NOT work.&lt;/p>
&lt;/blockquote></description></item><item><title>Tutorials: Structural connectivity dMRI</title><link>https://neuro-sevas/neurodesk.github.io/tutorials/structural_imaging/structuralconnectivity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/tutorials/structural_imaging/structuralconnectivity/</guid><description>
&lt;blockquote>
&lt;p>&lt;em>This tutorial was created by Joan Amos.&lt;/em>&lt;/p>
&lt;p>Email: &lt;a href="mailto:joan@std.uestc.edu.cn">joan@std.uestc.edu.cn&lt;/a>
Github: @Joanone&lt;/p>
&lt;/blockquote>
&lt;h2 id="references">References:&lt;/h2>
&lt;p>The steps used for this tutorial were referenced from:
&lt;a href="https://github.com/civier/HCP-dMRI-connectome">https://github.com/civier/HCP-dMRI-connectome&lt;/a>
&lt;a href="https://andysbrainbook.readthedocs.io/en/latest/MRtrix/MRtrix_Course/MRtrix_00_Diffusion_Overview.html">https://andysbrainbook.readthedocs.io/en/latest/MRtrix/MRtrix_Course/MRtrix_00_Diffusion_Overview.html&lt;/a>
&lt;a href="https://mrtrix.readthedocs.io/en/latest/quantitative_structural_connectivity/structural_connectome.html">https://mrtrix.readthedocs.io/en/latest/quantitative_structural_connectivity/structural_connectome.html&lt;/a>&lt;/p>
&lt;h2 id="data-description">Data Description&lt;/h2>
&lt;h3 id="reference">Reference:&lt;/h3>
&lt;p>The single subject data used in this tutorial has been preprocessed and was downloaded from:&lt;/p>
&lt;p>&lt;a href="https://db.humanconnectome.org/">https://db.humanconnectome.org/&lt;/a>&lt;/p>
&lt;p>100307_3T_Structural_preproc.zip
100307_3T_Diffusion_preproc.zip&lt;/p>
&lt;h3 id="download-demo-data">Download demo data:&lt;/h3>
&lt;p>&lt;a href="https://1drv.ms/u/s!AjZJgBZ_P9UO8nWvAFwQyKQnrroe?e=6qmRlQ">https://1drv.ms/u/s!AjZJgBZ_P9UO8nWvAFwQyKQnrroe?e=6qmRlQ&lt;/a> - Diffusion data
&lt;a href="https://1drv.ms/u/s!AjZJgBZ_P9UO8nblYQyUVsibqggs?e=mkwLpQ">https://1drv.ms/u/s!AjZJgBZ_P9UO8nblYQyUVsibqggs?e=mkwLpQ&lt;/a> - Structural data&lt;/p>
&lt;h3 id="required-structural-preprocessed-input-files">Required structural preprocessed input files&lt;/h3>
&lt;p>aparc+aseg.nii.gz
T1w_acpc_dc_restore_brain.nii.gz&lt;/p>
&lt;h3 id="required-diffusion-preprocessed-input-files">Required diffusion preprocessed input files&lt;/h3>
&lt;p>bvals
bvecs
data.nii.gz&lt;/p>
&lt;h2 id="install-neurodesk-on-windows-and-mount-external-storage-on-your-host-computer">Install Neurodesk on windows and mount external storage on your host computer&lt;/h2>
&lt;p>References:
&lt;a href="https://neurodesk.github.io/docs/neurodesktop/getting-started/windows/">https://neurodesk.github.io/docs/neurodesktop/getting-started/windows/&lt;/a>
&lt;a href="https://neurodesk.github.io/docs/neurodesktop/storage/">https://neurodesk.github.io/docs/neurodesktop/storage/&lt;/a>&lt;/p>
&lt;p>N/B: Constructing the structural connectivity using dMRI HCP data is computationally intensive. Thus, ensure you have sufficient disk space (&amp;gt;100GB) and RAM size (16, 32GB)&lt;/p>
&lt;p>Open the powershell terminal and run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker run --shm-size=1gb -it --privileged --name neurodesktop -v C:/neurodesktop-storage:/neurodesktop-storage -v D:/moredata:/data -p 8080:8080 -h neurodesktop-20220222 vnmd/neurodesktop:20220222
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="navigate-to-the-mounted-storage--more-data--create-a-new-folder-of-your-choice---copy-the-required-input-files-into-a-folder-100307">Navigate to the mounted storage&amp;ndash;&amp;gt;more data&amp;ndash;&amp;gt;Create a new folder of your choice&amp;ndash;&amp;gt; copy the required input files into a folder-&amp;gt;100307&lt;/h2>
&lt;p>N/B: The folder created in this tutorial was tagged &amp;ldquo;Test&amp;rdquo;&lt;/p>
&lt;p>Open a terminal in neurodesk and run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd/data/Test/100307
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="activate-mrtrix3-software-in-the-neurodesk-terminal">Activate mrtrix3 software in the neurodesk terminal&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ml mrtrix3/3.0.3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>N/B: The advantage neurodesk offers is the version of software can be selected from a range of others, which caters for reproducibility. The mrtrix3 (3.0.3) version was used in this tutorial.&lt;/p>
&lt;h2 id="step-1-further-pre-processing">Step 1: Further pre-processing&lt;/h2>
&lt;p>Extract data.nii.gz to enable memory-mapping. The extracted files are about 4.5GB:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>gunzip -c data.nii.gz &amp;gt; data.nii;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mrconvert data.nii DWI.mif -fslgrad bvecs bvals -datatype float32 -stride 0,0,0,1 -force -info;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm -f data.nii
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Perform mrconvert:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>dwibiascorrect ants DWI.mif DWI_bias_ants.mif -bias bias_ants_field.mif -force -info;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Extract the response function. Uses -stride 0,0,0,1:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>dwi2response dhollander DWI_bias_ants.mif response_wm.txt response_gm.txt response_csf.txt -voxels RF_voxels.mif -force;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dwiextract DWI_bias_ants.mif - -bzero | mrmath - mean meanb0.mif -axis 3 -force -info
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Generate mask:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dwi2mask DWI_bias_ants.mif DWI_mask.mif -force -info;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Generate Fibre Orientation Distributions (FODs):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>dwi2fod msmt_csd DWI_bias_ants.mif response_wm.txt wmfod.mif response_gm.txt gm.mif response_csf.txt csf.mif -mask DWI_mask.mif -force -info;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Perform normalization:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mtnormalise wmfod.mif wmfod_norm.mif gm.mif gm_norm.mif csf.mif csf_norm.mif -mask DWI_mask.mif -check_norm mtnormalise_norm.mif -check_mask mtnormalise_mask.mif -force -info
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Generate a 5 tissue image:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>5ttgen fsl T1w_acpc_dc_restore_brain.nii.gz 5TT.mif -premasked
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Convert the B0 image:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>mrconvert meanb0.mif mean_b0.nii.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Activate the fsl and afni softwares in the neurodesk terminal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>ml fsl/6.0.3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ml afni/21.0.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use &amp;ldquo;fslroi&amp;rdquo; to extract the first volume of the segmented dataset which corresponds to the Grey Matter Segmentation:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>fslroi 5TT.nii.gz 5TT_vol0.nii.gz 0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use &amp;ldquo;flirt&amp;rdquo; command to coregister the two datasets:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flirt -in mean_b0.nii.gz -ref 5TT_vol0.nii.gz -interp nearestneighbour -dof 6 -omat diff2struct_fsl.mat
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Convert the transformation matrix to a format readble by MRtrix:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>transformconvert diff2struct_fsl.mat mean_b0.nii.gz 5TT.nii.gz flirt_import diff2struct_mrtrix.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Coregister the anatomical image to the diffusion image:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mrtransform 5TT.mif -linear diff2struct_mrtrix.txt -inverse 5TT_coreg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create the seed boundary which sepearates the grey from the white matter. The command &amp;ldquo;5tt2gmwmi&amp;rdquo; denotes (5 tissue type(segmentation) to grey matter/white matter interface):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5tt2gmwmi 5TT_coreg.mif gmwmSeed_coreg.mif
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-2-tractogram-construction">Step 2: Tractogram construction&lt;/h2>
&lt;p>The probabilistic tractography which is the default in MRtrix is used in this tutorial. The default method is the iFOD2 algorithm.
The number of streamlines used is 10 million, this was chosen to save computational time:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>tckgen -act 5TT_coreg.mif -backtrack -seed_gmwmi gmwmSeed_coreg.mif -nthreads 8 -minlength 5.0 -maxlength 300 -cutoff 0.06 -select 10000000 wmfod_norm.mif tracks_10M.tck -force
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-3-sift2-construction">Step 3: SIFT2 construction&lt;/h2>
&lt;p>The generated streamlines can be refined with tcksift2 to counterbalance the overfitting. This creates a text file containing weights for each voxel in the brain:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>tcksift2 -act 5TT_coreg.mif -out_mu sift_mu.txt -out_coeffs sift_coeffs.txt -nthreads 8 tracks.tck wmfod_norm.mif sift_1M.txt -force
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-4-connectome-construction">Step 4: Connectome construction&lt;/h2>
&lt;p>In constructing the connectome, the desikan-killany atlas which includes the cortical and sub-cortical regions (84 regions) was used.&lt;/p>
&lt;p>Copy the FreeSurferColorLUT.txt file from the ml freesurfer 7.2.0 singularity container to the subject&amp;rsquo;s folder&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>cp /opt/freesurfer-7.2.0/FreeSurferColorLUT.txt /data/Test/100307
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Copy the fs_default.txt file from the ml mrtrix3 3.0.3 singularity container to the subject&amp;rsquo;s folder&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>cp /opt/mrtrix3-3.0.3/share/mrtrix3/labelconvert/fs-default.txt /data/Test/100307
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The command labelconvert will use the parcellation and segmentation output of FreeSurfer to create a new parcellated file in .mif format:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>labelconvert aparc+aseg.nii.gz FreeSurferColorLUT.txt fs_default.txt nodes.mif -force
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Perform nodes co-registeration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>mrtransform nodes.mif -linear diff2struct_mrtrix.txt -inverse -datatype uint32 nodes_coreg.mif -force
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create a whole-brain connectome which denotes the streamlines between each parcellation pair in the atlas. The &amp;ldquo;symmetric&amp;rdquo; option makes the lower and upper diagonal the same, the &amp;ldquo;scale_invnodevol&amp;rdquo; option scales the connectome by the inverse of the size of the node:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>tck2connectome -symmetric -zero_diagonal -scale_invnodevol -tck_weights_in sift_1M.txt tracks.tck nodes_coreg.mif nodes.csv -out_assignment assignments_nodes.csv -force
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="viewing-the-connectome">Viewing the connectome&lt;/h2>
&lt;p>The generated nodes.csv file can be viewed outside neurodesk as a matrix in Matlab.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>connectome=importdata(&amp;#39;nodes.csv&amp;#39;);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>imagesc(connectome,[0 1])
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/Structural_connectivity_dMRI/Structural_connectivity.png" alt="Structural_connectivity" title="Structural_connectivity"> &amp;ndash;&amp;gt;&lt;/p></description></item><item><title>Tutorials: SWI</title><link>https://neuro-sevas/neurodesk.github.io/tutorials/phase_processing/swi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/tutorials/phase_processing/swi/</guid><description>
&lt;blockquote>
&lt;p>&lt;em>This tutorial was created by Steffen Bollmann.&lt;/em>&lt;/p>
&lt;p>Github: &lt;a href="https://github.com/stebo85">@stebo85&lt;/a>
Web: &lt;a href="https://mri.sbollmann.net/">mri.sbollmann.net&lt;/a>
Twitter: &lt;a href="https://twitter.com/sbollmann_MRI">@sbollmann_MRI&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="download-demo-data">Download demo data&lt;/h2>
&lt;p>Open a terminal and run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>pip install osfclient
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd /neurodesktop-storage/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>osf -p ru43c fetch 01_bids.zip /neurodesktop-storage/swi-demo/01_bids.zip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>unzip /neurodesktop-storage/swi-demo/01_bids.zip -d /neurodesktop-storage/swi-demo/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Open the CLEARSWI tool from the application menu:&lt;/p>
&lt;p>paste this julia script in a julia file and execute:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>cd /neurodesktop-storage/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vi clearswi.jl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>hit a or i and then paste this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>using CLEARSWI
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TEs = [20]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nifti_folder = &amp;#34;/neurodesktop-storage/swi-demo/01_bids/sub-170705134431std1312211075243167001/ses-1/anat&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>magfile = joinpath(nifti_folder, &amp;#34;sub-170705134431std1312211075243167001_ses-1_acq-qsm_run-1_magnitude.nii.gz&amp;#34;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>phasefile = joinpath(nifti_folder, &amp;#34;sub-170705134431std1312211075243167001_ses-1_acq-qsmPH00_run-1_phase.nii.gz&amp;#34;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mag = readmag(magfile);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>phase = readphase(phasefile);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>data = Data(mag, phase, mag.header, TEs);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>swi = calculateSWI(data);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># mip = createIntensityProjection(swi, minimum); # minimum intensity projection, other Julia functions can be used instead of minimum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mip = createMIP(swi); # shorthand for createIntensityProjection(swi, minimum)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>savenii(swi, &amp;#34;/neurodesktop-storage/swi-demo/swi.nii&amp;#34;; header=mag.header)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>savenii(mip, &amp;#34;/neurodesktop-storage/swi-demo/mip.nii&amp;#34;; header=mag.header)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>hit SHIFT-Z-Z and run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>julia clearswi.jl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Open ITK snap from the Visualization Application&amp;rsquo;s menu and inspect the results (the outputs are in swi-demo/swi.nii and mip.nii)
&lt;img src="https://user-images.githubusercontent.com/4021595/137708852-6b7dd2c7-3e6f-42fd-88e6-06afe87a72a9.png" alt="image">&lt;/p></description></item><item><title>Tutorials: Unwrapping</title><link>https://neuro-sevas/neurodesk.github.io/tutorials/phase_processing/unwrapping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/tutorials/phase_processing/unwrapping/</guid><description>
&lt;blockquote>
&lt;p>&lt;em>This tutorial was created by Steffen Bollmann.&lt;/em>&lt;/p>
&lt;p>Github: &lt;a href="https://github.com/stebo85">@stebo85&lt;/a>
Web: &lt;a href="https://mri.sbollmann.net/">mri.sbollmann.net&lt;/a>
Twitter: &lt;a href="https://twitter.com/sbollmann_MRI">@sbollmann_MRI&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="download-demo-data">Download demo data&lt;/h2>
&lt;p>Open a terminal and run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>pip install osfclient
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd /neurodesktop-storage/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>osf -p ru43c fetch 01_bids.zip /neurodesktop-storage/swi-demo/01_bids.zip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>unzip /neurodesktop-storage/swi-demo/01_bids.zip -d /neurodesktop-storage/swi-demo/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir /neurodesktop-storage/romeo-demo/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp /neurodesktop-storage/swi-demo/01_bids/sub-170705134431std1312211075243167001/ses-1/anat/sub-170705134431std1312211075243167001_ses-1_acq-qsmPH00_run-1_phase.nii.gz /neurodesktop-storage/romeo-demo/phase.nii.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp /neurodesktop-storage/swi-demo/01_bids/sub-170705134431std1312211075243167001/ses-1/anat/sub-170705134431std1312211075243167001_ses-1_acq-qsm_run-1_magnitude.nii.gz /neurodesktop-storage/romeo-demo/mag.nii.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gunzip /neurodesktop-storage/romeo-demo/mag.nii.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gunzip /neurodesktop-storage/romeo-demo/phase.nii.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="using-romeo-for-phase-unwrapping">Using ROMEO for phase unwrapping&lt;/h3>
&lt;p>Open the ROMEO tool from the application menu and run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>romeo -p /neurodesktop-storage/romeo-demo/phase.nii -m /neurodesktop-storage/romeo-demo/mag.nii -k nomask -o /neurodesktop-storage/romeo-demo/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/MRIPhase_Tutorial/romeo.PNG" alt="Romeo" title="Romeo">&lt;/p></description></item><item><title>Tutorials: Template for workflow creation</title><link>https://neuro-sevas/neurodesk.github.io/tutorials/documentation/workflowtemplate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://neuro-sevas/neurodesk.github.io/tutorials/documentation/workflowtemplate/</guid><description>
&lt;!--
Begin setting up your tutorial by filling in the details in the description above. This controls how your tutorial is named and displayed in the Neurodesk documentation. The details are as follows:
title: A title for your workflow
linkTitle: A shortened version of the title for the menu
weight: This controls where in the menu your tutorial will appear; you can leave this set to 1 for default sorting
tags: List any number of tags to help others find this tutorial. i.e. "eeg", "mvpa", "statistics"
description: > a short description of your workflow. This will form the subheading for the tutorial page.
Once you've filled out those details, you can delete this comment block.
-->
&lt;blockquote>
&lt;p>&lt;em>This tutorial was created by Name P. Namington.&lt;/em>&lt;/p>
&lt;p>Email: &lt;a href="mailto:n.namington@institution.edu.au">n.namington@institution.edu.au&lt;/a>&lt;/p>
&lt;p>Github: @Namesgit&lt;/p>
&lt;p>Twitter: @Nameshandle&lt;/p>
&lt;/blockquote>
&lt;!-- Fill in your personal details above so that we can credit the tutorial to you. Feel free to add any additional contact details i.e. website, or remove those that are irrelevant -->
&lt;p>Welcome to the workflow template, which you can use to contribute your own neurodesk workflow to our documentation. We aim to collect a wide variety of workflows representing the spectrum of tools available under the neurodesk architechture and the diversity in how researchers might apply them. Please add plenty of descriptive detail and make sure that all steps of the workflow work before submitting the tutorial.&lt;/p>
&lt;h2 id="how-to-contribute-a-new-workflow">How to contribute a new workflow&lt;/h2>
&lt;p>Begin by creating a copy of our documentation that you can edit:&lt;/p>
&lt;ol>
&lt;li>Visit the github repository for the Neurodesk documentation (&lt;a href="https://github.com/NeuroDesk/neurodesk.github.io)">https://github.com/NeuroDesk/neurodesk.github.io)&lt;/a>.&lt;/li>
&lt;li>&lt;a href="https://docs.github.com/en/get-started/quickstart/fork-a-repo">Fork&lt;/a> the repository.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;em>You should now have your own copy of the documentation, which you can alter without affecting our official documentation. You should see a panel stating &amp;ldquo;This branch is up to date with Neurodesk:hugo-docsy.&amp;rdquo; If someone else makes a change to the official documentation, the statement will change to reflect this. You can bring your repository up to date by clicking &amp;ldquo;Fetch upstream&amp;rdquo;.&lt;/em>&lt;/li>
&lt;/ul>
&lt;p>Next, create your workflow:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://docs.github.com/en/get-started/quickstart/fork-a-repo#cloning-your-forked-repository">Clone&lt;/a> your forked version of our documentation to a location of your choice on your computer.&lt;/li>
&lt;li>In this new folder, navigate to &amp;ldquo;neurodesk.github.io/content/en/tutorials&amp;rdquo; and then navigate to the subfolder you believe your workflow belongs in (e.g. &amp;ldquo;/functional_imaging&amp;rdquo;).&lt;/li>
&lt;li>Create a new, appropriately named markdown file to house your workflow. (e.g. &amp;ldquo;/physio.md&amp;rdquo;)&lt;/li>
&lt;li>Open this file in the editor of your choice (we recommend &lt;a href="https://code.visualstudio.com/">vscode&lt;/a>) and populate it with your workflow! Please use this template as a style guide, it can be located at &amp;ldquo;neurodesk.github.io\content\en\tutorials\documentation\workflowtemplate.md&amp;rdquo;. You&amp;rsquo;re also welcome to have a look at other the workflows already documented on our website for inspiration.&lt;/li>
&lt;/ol>
&lt;p>Finally, contribute your new workflow to the official documentation!:&lt;/p>
&lt;ol>
&lt;li>Once you are happy with your workflow, make sure you &lt;a href="https://github.com/git-guides/git-commit">commit&lt;/a> all your changes and &lt;a href="https://github.com/git-guides/git-push">push&lt;/a> these local commits to github.&lt;/li>
&lt;li>Navigate to your forked version of the repository on github.&lt;/li>
&lt;li>Before you proceed, make sure you are up to date with our upstream documentation, you may need to &lt;a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork">fetch upstream changes&lt;/a>.&lt;/li>
&lt;li>Now you can preview the changes before contributing them upstream. For this click on the &amp;ldquo;Actions&amp;rdquo; tab and enable the Actions (&amp;ldquo;I understand my workflows&amp;hellip;&amp;rdquo;). The first build will fail (due to a bug with the Github token), but the second build will work.&lt;/li>
&lt;li>Then you need to open the settings of the repository and check that Pages points to gh-pages and when clicking on the link the site should be there.&lt;/li>
&lt;li>To contribute your changes, click &amp;ldquo;Contribute&amp;rdquo;, and then &lt;a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests">&amp;ldquo;Open pull request&amp;rdquo;&lt;/a>.&lt;/li>
&lt;li>Give your pull request a title (e.g. &amp;ldquo;Document PhysIO workflow&amp;rdquo;), leave a comment briefly describing what you have done, and then create the pull request.&lt;/li>
&lt;li>Someone from the Neurodesk team will review and accept your workflow and it will appear on our website soon!.&lt;/li>
&lt;/ol>
&lt;p>Thanks so much for taking the time to contribute your workflow to the Neurodesk community! If you have any feedback on the process, please let us know on &lt;a href="https://github.com/NeuroDesk/neurodesk.github.io/discussions">github discussions&lt;/a>.&lt;/p>
&lt;h2 id="formatting-guidelines">Formatting guidelines&lt;/h2>
&lt;p>You can embelish your text in this tutorial using markdown conventions; text can be &lt;strong>bold&lt;/strong>, &lt;em>italic&lt;/em>, or &lt;del>strikethrough&lt;/del>. You can also add &lt;a href="https://www.neurodesk.org/">Links&lt;/a>, and you can organise your tutorial with headers, starting at level 2 (the page title is a level 1 header):&lt;/p>
&lt;h2 id="level-2-heading">Level 2 heading&lt;/h2>
&lt;p>You can also include progressively smaller subheadings:&lt;/p>
&lt;h3 id="level-3-heading">Level 3 heading&lt;/h3>
&lt;p>Some more detailed information.&lt;/p>
&lt;h4 id="level-4-heading">Level 4 heading&lt;/h4>
&lt;p>Even more detailed information.&lt;/p>
&lt;h3 id="code-blocks">Code blocks&lt;/h3>
&lt;p>You can add codeblocks to your tutorial as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span># Some example code
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>import numpy as np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a = np.array([1, 2])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b = np.array([3, 4])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(a+b)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or add syntax highlighting to your codeblocks:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">#&lt;/span> &lt;span style="color:#000">Some&lt;/span> &lt;span style="color:#000">example&lt;/span> &lt;span style="color:#000">code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">numpy&lt;/span> &lt;span style="color:#000">as&lt;/span> &lt;span style="color:#000">np&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">a&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">np&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">array&lt;/span>&lt;span style="color:#000;font-weight:bold">([&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">b&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">np&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">array&lt;/span>&lt;span style="color:#000;font-weight:bold">([&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span>&lt;span style="color:#000;font-weight:bold">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">a&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>&lt;span style="color:#000">b&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Advanced code or command line formatting using this html snippet:&lt;/p>
&lt;pre class="language-shell command-line" data-prompt=">>>" data-output="6">
&lt;code># Some example code
import numpy as np
a = np.array([1, 2])
b = np.array([3, 4])
print(a+b)
[4 6]&lt;/code>
&lt;/pre>
&lt;p>You can also add code snippets, e.g. &lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code>, which will be shown inline.&lt;/p>
&lt;h3 id="images">Images&lt;/h3>
&lt;p>To add screenshots to your tutorial, create a subfolder in &lt;code>neurodesk.github.io/static&lt;/code> with the same link name as your tutorial. Add your screenshot to this folder, keeping in mind that you may want to adjust your screenshot to a reasonable size before uploading. You can then embed these images in your tutorial using the following convention:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>![EEGtut1](/EEG_Tutorial/EEGtut1.png &amp;#39;EEGtut1&amp;#39;) &amp;lt;!-- ![filename without extension](/subfolder_name/filename.png &amp;#39;[filename without extension&amp;#39;) --&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://neuro-sevas/neurodesk.github.io/EEG_Tutorial/EEGtut1.png" alt="EEGtut1" title="EEGtut1"> &amp;lt;!&amp;ndash; &lt;img src="https://neuro-sevas/neurodesk.github.io/subfolder_name/filename.png" alt="filename without extension" title="[filename without extension"> &amp;ndash;&amp;gt;&lt;/p>
&lt;h3 id="alerts-and-warnings">Alerts and warnings&lt;/h3>
&lt;p>You can grab reader&amp;rsquo;s attention to particularly important information with quoteblocks, alerts and warnings:&lt;/p>
&lt;blockquote>
&lt;p>This is a quoteblock&lt;/p>
&lt;/blockquote>
&lt;p>
&lt;div class="alert alert-primary" role="alert">
This is an alert.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
This is a warning.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
This is a warning with a title.
&lt;/div>
&lt;/p>
&lt;p>You can also segment information as follows:&lt;/p>
&lt;hr>
&lt;p>There&amp;rsquo;s a horizontal rule above and below this.&lt;/p>
&lt;hr>
&lt;p>Or add page information:
&lt;div class="pageinfo pageinfo-primary">
&lt;p>This is a placeholder. Replace it with your own content.&lt;/p>
&lt;/div>
&lt;/p>
&lt;h3 id="tables">Tables&lt;/h3>
&lt;p>You may want to order information in a table as follows:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Neuroscientist&lt;/th>
&lt;th>Notable work&lt;/th>
&lt;th>Lifetime&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Santiago Ramón y Cajal&lt;/td>
&lt;td>Investigations on microscopic structure of the brain&lt;/td>
&lt;td>1852–1934&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Rita Levi-Montalcini&lt;/td>
&lt;td>Discovery of nerve growth factor (NGF)&lt;/td>
&lt;td>1909–2012&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Anne Treisman&lt;/td>
&lt;td>Feature integration theory of attention&lt;/td>
&lt;td>1935–2018&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="lists">Lists&lt;/h3>
&lt;p>You may want to organise information in a list as follows:&lt;/p>
&lt;p>Here is an unordered list:&lt;/p>
&lt;ul>
&lt;li>Rstudio&lt;/li>
&lt;li>JASP&lt;/li>
&lt;li>SPSS&lt;/li>
&lt;/ul>
&lt;p>And an ordered list:&lt;/p>
&lt;ol>
&lt;li>Collect data&lt;/li>
&lt;li>Try to install analysis software&lt;/li>
&lt;li>Cry a little&lt;/li>
&lt;/ol>
&lt;p>And an unordered task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Install Neurodesktop&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Analyse data&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Take a vacation&lt;/li>
&lt;/ul>
&lt;p>And a &amp;ldquo;mixed&amp;rdquo; task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> writing&lt;/li>
&lt;li>?&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> more writing probably&lt;/li>
&lt;/ul>
&lt;p>And a nested list:&lt;/p>
&lt;ul>
&lt;li>EEG file extensions
&lt;ul>
&lt;li>.eeg, .vhdr, .vmrk&lt;/li>
&lt;li>.edf&lt;/li>
&lt;li>.bdf&lt;/li>
&lt;li>.set, .fdt&lt;/li>
&lt;li>.smr&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>MEG file extensions
&lt;ul>
&lt;li>.ds&lt;/li>
&lt;li>.fif&lt;/li>
&lt;li>.sqd&lt;/li>
&lt;li>.raw&lt;/li>
&lt;li>.kdf&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item></channel></rss>